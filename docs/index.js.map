{"version":3,"sources":["../src/utils/setCookie.ts","../src/utils/utils.ts","../src/components/annotation_slider/main.ts","../src/components/full_screen/main.ts","../src/components/font_size/main.ts","../src/components/font_family/main.ts","../src/components/image_switch/main.ts","../src/components/image_loader/main.ts","../src/components/image_loader/pagination.ts","../src/components/image_loader/resize.ts","../src/components/search_params/main.ts","../src/components/multi_language/main.ts","../index.ts"],"names":["config","hde","color","html_class","css_class","hide","slider_str","OpenSeadragon","hideLoading","tmp","el"],"mappings":"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","sourcesContent":["export class SetDataCookie {\n  name: string;\n  config: object;\n\n  constructor(name: string, config: object) {\n    this.name = name;\n    this.config = config;\n  }\n\n  build() {\n    sessionStorage.setItem(this.name, JSON.stringify(this.config));\n  }\n}\n","// ## functions for accessing parsed class and adding or removing markup\n// by adding or removing classes. classes should hold CSS stylsheets\n// defined by the user separately.\n\nexport function removeMarkup(\n  html_class: string | boolean,\n  css_class: string | [],\n  color: string,\n  hide: {\n    hidden: boolean;\n    class: string;\n  },\n  style: { css_class: string }\n) {\n  // find all provided classes\n  var selected = document.querySelectorAll(`.${html_class}`);\n  selected.forEach((el: any) => {\n    // in case classes come as object of two classes\n    // one of the classes must be part in HTML dom\n    // if one is present it is removed and another class added\n    // lets you control CSS styles\n    if (css_class instanceof Object) {\n      css_class.forEach((css) => {\n        if (el.classList.contains(css)) {\n          el.classList.remove(css);\n        } else {\n          el.classList.add(css);\n        }\n      });\n\n      // if classes are a simple string\n      // removes additional class\n    } else {\n      el.classList.remove(css_class);\n    }\n\n    // removes color class\n    el.classList.remove(color);\n\n    // adds additional class for element styling\n    el.classList.add(style.css_class);\n  });\n  // if hide is true it sets display to none\n  if (hide) {\n    try {\n      var hde = hide.hidden;\n    } catch (err) {\n      console.log(`aot hide.hidden not found ${err}`);\n      var hde = false;\n    }\n    try {\n      var cls = hide.class;\n    } catch (err) {\n      console.log(`aot hide.hidden not found ${err}`);\n      var cls = \"\";\n    }\n    if (hde && cls) {\n      let hde = document.querySelectorAll(`.${cls}`);\n      hde.forEach((el: any) => {\n        el.style.display = \"none\";\n      });\n    }\n  }\n  // returns number of nodes found as string\n  return String(selected.length);\n}\n\n// same logic as above but for adding classes\nexport function addMarkup(\n  html_class: string,\n  css_class: string | [],\n  color: string,\n  hide: {\n    hidden: boolean;\n    class: string;\n  },\n  style: { css_class: string }\n) {\n  var selected = document.querySelectorAll(`.${html_class}`);\n  selected.forEach((el: any) => {\n    if (css_class instanceof Object) {\n      css_class.forEach((css) => {\n        if (el.classList.contains(css)) {\n          el.classList.remove(css);\n        } else {\n          el.classList.add(css);\n        }\n      });\n    } else {\n      el.classList.add(css_class);\n    }\n    el.classList.add(color);\n    el.classList.add(style.css_class);\n  });\n  if (hide) {\n    try {\n      var hde = hide.hidden;\n    } catch (err) {\n      console.log(`aot hide.hidden not found ${err}`);\n      var hde = false;\n    }\n    try {\n      var cls = hide.class;\n    } catch (err) {\n      console.log(`aot hide.hidden not found ${err}`);\n      var cls = \"\";\n    }\n    if (hde && cls) {\n      let hde = document.querySelectorAll(`.${cls}`);\n      hde.forEach((el: any) => {\n        el.style.display = \"inline\";\n      });\n    }\n  }\n  return String(selected.length);\n}\n\nexport function uptState(options) {\n  if (options.hist) {\n    // update url and state of history\n    window.history.replaceState({}, \"\", options.href);\n  }\n\n  if (options.state) {\n    window.history.pushState(options.state, \"\", options.href);\n  }\n\n  if (options.cit) {\n    options.cit.innerHTML = `${location.hostname}${location.pathname}${options.href}`;\n    options.cit.setAttribute(\"href\", options.href);\n  }\n}\n\nexport function hideLoading(id: string) {\n  let spinnerID = \"spinner_\" + id;\n  if (document.getElementById(spinnerID) !== null) {\n    document.getElementById(spinnerID)!.remove();\n  }\n}\n\nexport function paramCheck(\n  param: Function | string | [] | {} | null | undefined,\n  def: string | boolean | {} | [] | null | undefined\n) {\n  if (param) {\n    return param;\n  } else {\n    return def;\n  }\n}\n","import { addMarkup, removeMarkup, uptState } from \"../../utils/utils\";\nimport type { AnnotationType } from \"../../utils/types\";\n\nexport class AnnotationSlider extends HTMLElement {\n  options: AnnotationType | null | undefined;\n\n  static get observedAttributes() {\n    return [\"opt\", \"onclick\"];\n  }\n\n  connectedCallback() {\n    this.render();\n    this.childNodes[3].childNodes[1].addEventListener(\n      \"click\",\n      this.textFeatures\n    );\n    // console.log(this.childNodes[3].childNodes[1]);\n  }\n\n  // function to triggers on click of the rendered element\n  textFeatures() {\n    // get session cookie with configuration json\n    let data = \"annotation_slider\";\n    let storage = sessionStorage.getItem(data);\n    if (storage) {\n      let options: AnnotationType = JSON.parse(storage);\n\n      // get current url parameters\n      let url = new URL(window.location.href);\n      // let hash = url.hash;\n      let urlParam = new URLSearchParams(url.search);\n\n      // get id of rendered html element. opt value of custom element is used as ID.\n      let id = this.getAttribute(\"id\");\n      if (!id) {\n        console.log(\n          \"Error 001 in component annotation slider: \\\n          ID of annotation slider custom child element not found. \\\n          Make sure the annotation-slider element holds the attribute 'opt' with \\\n          a defined string value.\"\n        );\n      }\n\n      // configuration holds an array with variants with at least one variant object.\n      // to match the custom element with the configuration the opt value must match.\n      // variant is found by comparing variant config opt with custom element attr opt\n      var variant_check = options.variants.find((v) => v.opt === id);\n      // variant as selected in UI\n      let variant = variant_check\n        ? variant_check\n        : {\n            opt: id ? id : \"text-features-1\",\n            features: {\n              all: false,\n              class: \"single-feature\",\n            },\n          };\n      if (!variant) {\n        console.log(\n          \"Error 003 in component annotation slider:\\\n          No variant found! Please define a variant object that contains \\\n                and 'opt' key holding a string value that matches the 'opt' value of custom \\\n                element 'annotation#slider'.\"\n        );\n      }\n\n      // use try/catch to verify if object exists in options\n      // check if features params of UI variant are available\n      var features = variant.features\n        ? variant.features\n        : {\n            all: false,\n            class: \"single-feature\",\n          };\n\n      var variants_check = options.variants.filter(\n        (v) => v.features.all === false\n      );\n      // all variants except all features\n      var variants = variants_check\n        ? variants_check\n        : [\n            {\n              opt: id ? id : \"text-features-all\",\n              features: {\n                all: false,\n                class: \"single-feature\",\n              },\n            },\n          ];\n\n      // use try/catch to verify if object exists in options\n      var none_variant_check = options.variants.filter(\n        (v: any) => v.features.all === true\n      );\n\n      // all-features variant\n      var none_variant = none_variant_check\n        ? none_variant_check\n        : [\n            {\n              opt: \"text-features\",\n              features: {\n                all: true,\n                class: \"features-1\",\n              },\n            },\n          ];\n\n      // use try/catch to verify if object exists in options\n      var style = options.span_element\n        ? options.span_element\n        : {\n            css_class: \"badge-item\",\n          };\n\n      var active = options.active_class ? options.active_class : \"active\";\n\n      // variants are either single-feature or all-features\n      // single-features manipulate the DOM based on a given class\n      // all-features control all other single-feature variants\n      // one to control them all (well could be several to control them all)\n\n      // in control all other sliders the following defines seperates\n      // the all-features variant from others. If one is found it triggers\n      // all sliders by clicking on the all-features slider variant\n      var all = features.all;\n      var allClass = features.class;\n\n      if (all === true) {\n        // the current state of the annoation slider is set bei adding or\n        // removing a class e.g. 'active'\n        if (this.classList.contains(active)) {\n          this.classList.remove(active);\n\n          // if current state is active remove class/state\n          // find all element classes in DOM and remove CSS class\n          [...variants].forEach((el) => {\n            if (\n              (document.getElementById(el.opt) as HTMLInputElement).checked ===\n                true &&\n              el.features.class === allClass\n            ) {\n              // for all found DOM elements remove color class and css_class\n              // if hide is true hide elements with display:none\n              var color = el.color ? el.color : `color-${el.opt}`;\n              let html_class = el.html_class\n                ? el.html_class\n                : `html-class-${el.opt}`;\n              let css_class = el.css_class\n                ? el.css_class\n                : `css-class-${el.opt}`;\n              let hide = el.hide ? el.hide : { hidden: false, class: \"\" };\n\n              // besides removing marktup the function 'removemarkup()' returns\n              // the number of elements nodes found as string\n              removeMarkup(html_class, css_class, color, hide, style);\n\n              // the color class is also removed from the slider element\n              var slider_str = el.opt_slider\n                ? el.opt_slider\n                : `${el.opt}-slider`;\n\n              try {\n                let slider = document.getElementById(slider_str) as HTMLElement;\n                slider.classList.remove(color);\n\n                // the data attrib and class is removed from slider element\n                slider.removeAttribute(\"data\");\n                slider.classList.remove(\"slider-number\");\n              } catch (err) {\n                console.log(`Error 008 in component annotation slider: \\\n                slider class ${slider_str} not found!`);\n              }\n\n              // disables the checked value from input element\n              // as well as the class to define the state\n              (document.getElementById(el.opt) as HTMLInputElement).checked =\n                false;\n              (\n                document.getElementById(el.opt) as HTMLInputElement\n              ).classList.remove(active);\n\n              // access the url params and sets the key to off\n              urlParam.delete(el.opt);\n            }\n          });\n\n          // the node count also works on the all-features variant\n          this.removeAttribute(\"data\");\n          this.classList.remove(\"slider-number\");\n        } else {\n          // same functionality as above but with reversed effect\n          // adds markup, count and changes state to active\n          var count = 0;\n          this.classList.add(active);\n          [...variants].forEach((el: any) => {\n            if (\n              (document.getElementById(el.opt) as HTMLInputElement).checked ===\n                false &&\n              el.features.class === allClass\n            ) {\n              var color = el.color ? el.color : `color-${el.opt}`;\n              let html_class = el.html_class\n                ? el.html_class\n                : `html-class-${el.opt}`;\n              let css_class = el.css_class\n                ? el.css_class\n                : `css-class-${el.opt}`;\n              let hide = el.hide ? el.hide : false;\n              var selected = addMarkup(\n                html_class,\n                css_class,\n                color,\n                hide,\n                style\n              );\n              var slider_str = el.opt_slider\n                ? el.opt_slider\n                : `${el.opt}-slider`;\n\n              try {\n                let slider = document.getElementById(slider_str) as HTMLElement;\n\n                slider.classList.add(color);\n                slider.setAttribute(\"data\", selected);\n                slider.classList.add(\"slider-number\");\n              } catch (err) {\n                console.log(\n                  `Message 009 in component annotation slider: \\\n                  slider class ${slider_str} not found!`\n                );\n              }\n\n              (document.getElementById(el.opt) as HTMLInputElement).checked =\n                true;\n              (\n                document.getElementById(el.opt) as HTMLInputElement\n              ).classList.add(active);\n              urlParam.set(el.opt, \"on\");\n              count += parseInt(selected);\n            }\n          });\n\n          this.setAttribute(\"data\", String(count));\n          this.classList.add(\"slider-number\");\n        }\n      } else if (typeof all !== \"boolean\") {\n        // if the all-features key is not a boolean it displays a waring in the console.\n        console.log(\n          `Error 010 in component annotation slider: \\\n          Type of variant config. \"features.all\" must be Boolean (true or false)`\n        );\n      } else {\n        // if variant is a single-feature this part triggers\n        // either adds or removes markup (classes) depending on the state of the slider\n        var color = variant.color ? variant.color : `color-${variant.opt}`;\n        var html_class = variant.html_class\n          ? variant.html_class\n          : `html-class-${variant.opt}`;\n        var css_class = variant.css_class\n          ? variant.css_class\n          : `css-class-${variant.opt}`;\n        var hide = variant.hide ? variant.hide : { hidden: false, class: \"\" };\n        var slider_str = variant.opt_slider\n          ? variant.opt_slider\n          : `${variant.opt}-slider`;\n\n        if (this.classList.contains(active)) {\n          // state == active (remove state and markup)\n          this.classList.remove(active);\n          let selected = removeMarkup(\n            html_class,\n            css_class,\n            color,\n            hide,\n            style\n          );\n\n          try {\n            let slider = document.getElementById(slider_str) as HTMLElement;\n            slider.classList.remove(color);\n            slider.removeAttribute(\"data\");\n            slider.classList.remove(\"slider-number\");\n          } catch (err) {\n            console.log(`Error 011 in component annotation slider: \\\n            slider class ${slider_str} not found!`);\n          }\n\n          this.classList.remove(color);\n          urlParam.delete(variant.opt);\n        } else {\n          // state == not active (add state and markup)\n          this.classList.add(active);\n          let selected = addMarkup(html_class, css_class, color, hide, style);\n\n          try {\n            let slider = document.getElementById(slider_str) as HTMLElement;\n            slider.classList.add(color);\n            slider.setAttribute(\"data\", selected);\n            slider.classList.add(\"slider-number\");\n          } catch (err) {\n            console.log(`Error 012 in component annotation slider: \\\n            slider class ${slider_str} not found!`);\n          }\n\n          this.classList.add(color);\n          urlParam.set(variant.opt, \"on\");\n        }\n\n        /*\n          If all or not all annotation-sliders are selected the slider\n          link will automatically be switched on or off.\n        */\n        var feat_leader = none_variant.find(\n          (g: any) => g.features.class === features.class\n        );\n        if (feat_leader instanceof Object) {\n          let variants_checked = document.querySelectorAll(\n            `input.${features.class}[aot-type=\"false\"]:checked`\n          );\n          let variants_group = variants.filter(\n            (v: any) =>\n              v.features.all === false && v.features.class === features.class\n          );\n          if (variants_checked.length === variants_group.length) {\n            (\n              document.getElementById(feat_leader.opt) as HTMLInputElement\n            ).checked = true;\n            (\n              document.getElementById(feat_leader.opt) as HTMLInputElement\n            ).classList.add(active);\n          } else {\n            (\n              document.getElementById(feat_leader.opt) as HTMLInputElement\n            ).checked = false;\n            (\n              document.getElementById(feat_leader.opt) as HTMLInputElement\n            ).classList.remove(active);\n          }\n        }\n      }\n\n      // current state of the annotation sliders is saved in the url parameters\n      // current state is also saved in window history (back/forward browser button)\n      var stateName = variant.opt;\n      var state = {\n        [stateName]: \"on/off\",\n      };\n\n      // try to find elment holding an ID matching the 'chg_citation' string value\n      // get citation url key and HTMLElement\n      var citation_url_str = variant.chg_citation\n        ? variant.chg_citation\n        : \"citation-url\";\n      var citation_url = document.getElementById(citation_url_str);\n\n      let href = `?${urlParam}${location.hash}`;\n      uptState({\n        hist: false,\n        cit: citation_url,\n        state: state,\n        href: href,\n      });\n    }\n  }\n\n  // function to render HTML element inside the custom element\n  render() {\n    let data = \"annotation_slider\";\n    let storage = sessionStorage.getItem(data);\n\n    if (storage === null) return;\n    let options: AnnotationType = JSON.parse(storage);\n\n    let opt = this.getAttribute(\"opt\");\n    // check if user set opt attribute\n    if (typeof opt !== \"string\") {\n      console.log(\n        \"Error 013 in component annotation slider: \\\n      No 'opt' attribute in custom element font-family found!\"\n      );\n    }\n\n    // get attribute with onclick function\n    var dme_onclick = this.getAttribute(\"onclick\");\n\n    // variant is found by comparing variant config opt with custom element attr opt\n    var variant_check = options.variants.find((v) => v.opt === opt);\n    var variant = variant_check\n      ? variant_check\n      : {\n          opt: opt ? opt : \"text-features-1\",\n          features: {\n            class: \"features-1\",\n            all: false,\n          },\n        };\n\n    let features = variant.features\n      ? variant.features\n      : {\n          all: false,\n          class: \"feature-1\",\n        };\n\n    let title = variant.title ? variant.title : \"Text Feature\";\n    let opt_slider = variant.opt_slider ? variant.opt_slider : `${opt}-slider`;\n\n    // check if sizes object with font sizes is not null or undefined\n    let rendered_element = options.rendered_element\n      ? options.rendered_element\n      : {\n          label_class: \"switch\",\n          slider_class: \"i-slider round\",\n        };\n\n    let render_class = rendered_element.label_class\n      ? rendered_element.label_class\n      : \"switch\";\n    let slider_class = rendered_element.slider_class\n      ? rendered_element.slider_class\n      : \"i-slider round\";\n    this.innerHTML = `\n          <label>${title}</label>\n          <label class=\"${render_class}\">\n              <input title=\"${title}\"\n                  onclick=\"${dme_onclick}\"\n                  type=\"checkbox\"\n                  id=\"${opt}\"\n                  data-target=\"${data}\"\n                  class=\"${features.class}\"\n                  aot-type=\"${String(features.all)}\"/>\n              <span id=\"${opt_slider}\" class=\"${slider_class}\"></span>\n          </label>\n        `;\n  }\n\n  // attributeChangedCallback() {\n  //   this.render();\n  // }\n\n  disconnectedCallback() {\n    this.childNodes[3].childNodes[1].removeEventListener(\n      \"click\",\n      this.textFeatures\n    );\n  }\n}\n","import { uptState } from \"../../utils/utils\";\nimport type { FullScreenType } from \"../../utils/types\";\n\nexport class FullSize extends HTMLElement {\n  static get observedAttributes() {\n    return [\"opt\"];\n  }\n\n  connectedCallback() {\n    this.render();\n    // console.log(this.childNodes[3]);\n    this.childNodes[3].addEventListener(\"click\", this.fullScreen);\n  }\n\n  fullScreen() {\n    let data = \"fullsize\";\n\n    // get config by accessing sessions storage\n    let storage: string | null = sessionStorage.getItem(data);\n\n    if (storage) {\n      var options: FullScreenType = JSON.parse(storage);\n\n      let url = new URL(window.location.href);\n      let urlParam = new URLSearchParams(url.search);\n\n      let id = this.getAttribute(\"id\");\n\n      // variant is found by comparing variant config opt with custom element attr opt\n      var variant_check = options.variants.find((v) => v.opt === id);\n      var variant = variant_check\n        ? variant_check\n        : { opt: id ? id : \"fullscreen\" };\n\n      // check for option param or return default value\n      var active = options.active_class ? options.active_class : \"active\";\n\n      var hide = variant.hide ? variant.hide : \"hide-container\";\n\n      var hidden = variant.to_hide ? variant.to_hide : \"fade\";\n\n      var svg_show = `\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-fullscreen\" viewBox=\"0 0 16 16\">\n                    <path d=\"M1.5 1a.5.5 0 0 0-.5.5v4a.5.5 0 0 1-1 0v-4A1.5 1.5 0 0 1 1.5 0h4a.5.5 0 0 1 0 1h-4zM10 .5a.5.5 0 0 1 .5-.5h4A1.5 1.5 0 0 1 16 1.5v4a.5.5 0 0 1-1 0v-4a.5.5 0 0 0-.5-.5h-4a.5.5 0 0 1-.5-.5zM.5 10a.5.5 0 0 1 .5.5v4a.5.5 0 0 0 .5.5h4a.5.5 0 0 1 0 1h-4A1.5 1.5 0 0 1 0 14.5v-4a.5.5 0 0 1 .5-.5zm15 0a.5.5 0 0 1 .5.5v4a1.5 1.5 0 0 1-1.5 1.5h-4a.5.5 0 0 1 0-1h4a.5.5 0 0 0 .5-.5v-4a.5.5 0 0 1 .5-.5z\"/>\n                </svg>\n            `;\n      var svg_hide = `\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-fullscreen-exit\" viewBox=\"0 0 16 16\">\n                    <path d=\"M5.5 0a.5.5 0 0 1 .5.5v4A1.5 1.5 0 0 1 4.5 6h-4a.5.5 0 0 1 0-1h4a.5.5 0 0 0 .5-.5v-4a.5.5 0 0 1 .5-.5zm5 0a.5.5 0 0 1 .5.5v4a.5.5 0 0 0 .5.5h4a.5.5 0 0 1 0 1h-4A1.5 1.5 0 0 1 10 4.5v-4a.5.5 0 0 1 .5-.5zM0 10.5a.5.5 0 0 1 .5-.5h4A1.5 1.5 0 0 1 6 11.5v4a.5.5 0 0 1-1 0v-4a.5.5 0 0 0-.5-.5h-4a.5.5 0 0 1-.5-.5zm10 1a1.5 1.5 0 0 1 1.5-1.5h4a.5.5 0 0 1 0 1h-4a.5.5 0 0 0-.5.5v4a.5.5 0 0 1-1 0v-4z\"/>\n                </svg>\n            `;\n\n      var urlparam = variant.urlparam ? variant.urlparam : \"fullscreen\";\n\n      if (urlParam.get(urlparam) == \"off\" || urlParam.get(urlparam) == null) {\n        urlParam.set(urlparam, \"on\");\n        document.querySelectorAll(`.${hide}`).forEach((el) => {\n          el.classList.add(hidden);\n        });\n        this.innerHTML = svg_hide;\n        this.classList.remove(active);\n      } else {\n        urlParam.delete(urlparam);\n        document.querySelectorAll(`.${hide}`).forEach((el) => {\n          el.classList.remove(hidden);\n        });\n        this.innerHTML = svg_show;\n        this.classList.add(active);\n      }\n\n      var stateName = variant.opt ? variant.opt : \"edition-fullscreen\";\n      var stateParam = urlParam.get(urlparam);\n      var state = {\n        [stateName]: stateParam,\n      };\n\n      var citation_url_str = variant.chg_citation\n        ? variant.chg_citation\n        : \"citation-url\";\n      var citation_url = document.getElementById(citation_url_str);\n\n      let href = `?${urlParam}${location.hash}`;\n      uptState({\n        hist: false,\n        cit: citation_url,\n        state: state,\n        href: href,\n      });\n    }\n  }\n\n  render() {\n    let data = \"fullsize\";\n    var storage = sessionStorage.getItem(data);\n    if (storage === null) return;\n    var options: FullScreenType = JSON.parse(storage);\n\n    let opt = this.getAttribute(\"opt\");\n    var variant_check = options.variants.find((v) => v.opt === opt);\n    var variant = variant_check\n      ? variant_check\n      : { opt: opt ? opt : \"fullscreen\" };\n\n    var a_class = options.active_class\n      ? options.active_class\n      : \"nav-link btn btn-round\";\n    var svg = options.render_svg\n      ? options.render_svg\n      : \"<svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='currentColor' class='bi bi-fullscreen' viewBox='0 0 16 16'><path d='M1.5 1a.5.5 0 0 0-.5.5v4a.5.5 0 0 1-1 0v-4A1.5 1.5 0 0 1 1.5 0h4a.5.5 0 0 1 0 1h-4zM10 .5a.5.5 0 0 1 .5-.5h4A1.5 1.5 0 0 1 16 1.5v4a.5.5 0 0 1-1 0v-4a.5.5 0 0 0-.5-.5h-4a.5.5 0 0 1-.5-.5zM.5 10a.5.5 0 0 1 .5.5v4a.5.5 0 0 0 .5.5h4a.5.5 0 0 1 0 1h-4A1.5 1.5 0 0 1 0 14.5v-4a.5.5 0 0 1 .5-.5zm15 0a.5.5 0 0 1 .5.5v4a1.5 1.5 0 0 1-1.5 1.5h-4a.5.5 0 0 1 0-1h4a.5.5 0 0 0 .5-.5v-4a.5.5 0 0 1 .5-.5z'/></svg>\";\n    var opt_title = variant.title ? variant.title : \"Full screen on/off\";\n    var var_opt = variant.opt ? variant.opt : \"edition-fullscreen\";\n\n    this.innerHTML = `\n            <small><label style=\"padding:.2em;\">${opt_title}:</label></small>\n            <a title=\"${opt_title}\"\n                style=\"cursor:pointer;\"\n                class=\"${a_class} active\"\n                id=\"${var_opt}\"\n                data-target=\"${data}\">\n                ${svg}\n            </a>\n        `;\n  }\n\n  attributeChangedCallback() {\n    this.render();\n  }\n\n  disconnectedCallback() {\n    this.childNodes[3].removeEventListener(\"click\", this.fullScreen);\n  }\n}\n","import { uptState } from \"../../utils/utils\";\nimport type { FontSizeType } from \"../../utils/types\";\n\nexport class FontSize extends HTMLElement {\n  static get observedAttributes() {\n    return [\"opt\"];\n  }\n\n  connectedCallback() {\n    this.render();\n    // console.log(this.childNodes[3]);\n    this.childNodes[3].addEventListener(\"change\", this.fontSize);\n  }\n\n  fontSize() {\n    let data = \"fontsize\";\n    let storage: string | null = sessionStorage.getItem(data);\n\n    if (storage) {\n      var options: FontSizeType = JSON.parse(storage);\n\n      let url = new URL(window.location.href);\n      let urlParam = new URLSearchParams(url.search);\n\n      let id = this.getAttribute(\"id\");\n      // variant is found by comparing variant config opt with custom element attr opt\n      var variant_check = options.variants.find((v) => v.opt === id);\n      var variant = variant_check\n        ? variant_check\n        : { opt: id ? id : \"font-size\" };\n\n      let p_change = variant.paragraph ? variant.paragraph : \"p\";\n      let p_class = variant.p_class ? variant.p_class : \"yes-index\";\n\n      let size = variant.sizes\n        ? variant.sizes\n        : {\n            default: \"default\",\n            font_size_14: \"14\",\n            font_size_18: \"18\",\n            font_size_22: \"22\",\n            font_size_26: \"26\",\n          };\n\n      let urlparam = variant.urlparam ? variant.urlparam : \"fontsize\";\n\n      var value = (\n        document.getElementById(id ? id : \"font-size\") as HTMLSelectElement\n      ).value;\n\n      var css_class = variant.css_class ? variant.css_class : \"font-size-\";\n\n      if (urlParam.get(urlparam) !== value.replace(css_class, \"\")) {\n        urlParam.set(urlparam, value.replace(css_class, \"\"));\n        let paragraph = document.querySelectorAll(`${p_change}.${p_class}`);\n        [...paragraph].forEach((el) => {\n          for (let s in size) {\n            if (size[s] !== \"default\") {\n              el.classList.remove(css_class + size[s]);\n            }\n          }\n          if (value !== \"default\") {\n            el.classList.add(value);\n          }\n        });\n      }\n\n      var stateName = variant.opt ? variant.opt : \"select-fontsize\";\n      var stateParam = urlParam.get(urlparam);\n      var state = {\n        [stateName]: stateParam,\n      };\n      // window.history.pushState(state, '', `${location.pathname}?${urlParam}${location.hash}`);\n      var citation_url_str = variant.chg_citation\n        ? variant.chg_citation\n        : \"citation-url\";\n      var citation_url = document.getElementById(citation_url_str);\n\n      let href = `?${urlParam}${location.hash}`;\n      uptState({\n        hist: false,\n        cit: citation_url,\n        state: state,\n        href: href,\n      });\n    }\n  }\n\n  render() {\n    let data = \"fontsize\";\n    let storage: string | null = sessionStorage.getItem(data);\n    if (storage === null) return;\n    var options: FontSizeType = JSON.parse(storage);\n\n    let opt = this.getAttribute(\"opt\");\n    var variant_check = options.variants.find((v) => v.opt === opt);\n    var variant = variant_check\n      ? variant_check\n      : { opt: opt ? opt : \"font-size\" };\n    let size = variant.sizes\n      ? variant.sizes\n      : {\n          default: \"default\",\n          font_size_14: \"14\",\n          font_size_18: \"18\",\n          font_size_22: \"22\",\n          font_size_26: \"26\",\n        };\n\n    var html_class = options.html_class ? options.html_class : \"custom-select\";\n    var css_class = variant.css_class ? variant.css_class : \"font-size-\";\n    var var_title = variant.title ? variant.title : \"Font size\";\n\n    let s_html = `\n            <small><label style=\"padding:.2em;\">${var_title}:</label></small>\n            <select id=\"${opt}\" data-target=\"${data}\" class=\"${html_class}\">\n        `;\n    for (let s in size) {\n      if (size[s] == \"default\") {\n        var option = `<option value=\"default\" selected='selected'>${size[s]\n          .split(\"-\")\n          .slice(-1)} px`;\n      } else {\n        var option = `<option value='${css_class}${size[s]}'>${size[s]\n          .split(\"-\")\n          .slice(-1)} px`;\n      }\n      s_html += option;\n      s_html += \"</option>\";\n    }\n    s_html += \"</select>\";\n    this.innerHTML = s_html;\n  }\n\n  attributeChangedCallback() {\n    this.render();\n  }\n\n  disconnectedCallback() {\n    this.childNodes[3].removeEventListener(\"change\", this.fontSize);\n  }\n}\n","import { uptState } from \"../../utils/utils\";\nimport type { FontFamilyType, FontVariant } from \"../../utils/types\";\n\nexport class FontFamily extends HTMLElement {\n  static get observedAttributes() {\n    return [\"opt\"];\n  }\n\n  connectedCallback() {\n    this.render();\n    // console.log(this.childNodes[3]);\n    this.childNodes[3].addEventListener(\"change\", this.fontFamily);\n  }\n\n  fontFamily() {\n    let data = \"font_family\";\n    let storage = sessionStorage.getItem(data);\n\n    if (storage) {\n      let options: FontFamilyType = JSON.parse(storage);\n\n      let url = new URL(window.location.href);\n      let urlParam = new URLSearchParams(url.search);\n\n      let id = this.getAttribute(\"id\");\n      // variant is found by comparing variant config opt with custom element attr opt\n      var variant_check = options.variants.find((v) => v.opt === id);\n      var variant = variant_check\n        ? variant_check\n        : { opt: id ? id : \"font-family\" };\n\n      // get citation url key and HTMLElement\n      var citation_url_str = variant.chg_citation\n        ? variant.chg_citation\n        : \"citation-url\";\n      var citation_url = document.getElementById(citation_url_str);\n\n      // get urlparam key\n      var urlparam = variant.urlparam ? variant.urlparam : \"font\";\n\n      // define paragraph HTML element name\n      let p_change = variant.paragraph ? variant.paragraph : \"p\";\n      // define class to change font sizes (not all paragraphs might need to be changed)\n      let p_class = variant.p_class ? variant.p_class : \"yes-index\";\n\n      // check if sizes object with font sizes is not null or undefined\n      let family = variant.fonts\n        ? variant.fonts\n        : {\n            default: \"default\",\n            font1: \"Times-New-Roman\",\n            font2: \"Courier-New\",\n            font3: \"Arial-serif\",\n          };\n\n      // change select option value based on provided url param\n      var select = document.getElementById(variant.opt) as HTMLSelectElement;\n      var selected_value = select.value;\n\n      if (urlParam.get(urlparam) !== selected_value) {\n        urlParam.set(urlparam, selected_value);\n        let paragraph = document.querySelectorAll(`${p_change}.${p_class}`);\n        paragraph.forEach((el) => {\n          for (let [key, value] of Object.entries(family)) {\n            if (key !== \"default\") {\n              el.classList.remove(value.toLowerCase());\n            }\n          }\n          if (selected_value !== \"default\") {\n            el.classList.add(selected_value.toLowerCase());\n          }\n        });\n      }\n\n      var stateName = variant.opt;\n      var stateParam = urlParam.get(urlparam);\n      var state = {\n        [stateName]: stateParam,\n      };\n\n      let href = `?${urlParam}${location.hash}`;\n      uptState({\n        hist: false,\n        cit: citation_url,\n        state: state,\n        href: href,\n      });\n    }\n  }\n\n  render() {\n    let data = \"font_family\";\n    let storage = sessionStorage.getItem(data);\n    if (storage === null) return;\n    let options: FontFamilyType = JSON.parse(storage);\n\n    let opt = this.getAttribute(\"opt\");\n    // check if user set opt attribute\n    if (typeof opt !== \"string\") {\n      console.log(\"No 'opt' attribute in custom element font-family found!\");\n    }\n\n    // variant is found by comparing variant config opt with custom element attr opt\n    var variant_check = options.variants.find((v) => v.opt === opt);\n    var variant = variant_check\n      ? variant_check\n      : { opt: opt ? opt : \"font-family\" };\n\n    // check if sizes object with font sizes is not null or undefined\n    var family = variant.fonts\n      ? variant.fonts\n      : {\n          default: \"default\",\n          font1: \"Times-New-Roman\",\n          font2: \"Courier-New\",\n          font3: \"Arial-serif\",\n        };\n\n    let html_class = options.html_class ? options.html_class : \"custom-select\";\n    let css_class = variant.css_class ? variant.css_class : \"\";\n    let opt_title = variant.title ? variant.title : \"Font Family\";\n\n    let s_html = `\n            <small><label style=\"padding:.2em;\">${opt_title}:</label></small>\n            <select id=\"${opt}\" data-target=\"${data}\" class=\"${html_class}\">\n        `;\n    for (let s in family) {\n      if (family[s] == \"default\") {\n        var option = `<option value=\"default\" selected='selected'>${family[\n          s\n        ].replace(\"-\", \" \")}`;\n      } else {\n        var option = `<option value='${css_class}${family[s]}'>${family[\n          s\n        ].replace(\"-\", \" \")}`;\n      }\n      s_html += option;\n      s_html += \"</option>\";\n    }\n    s_html += \"</select>\";\n    this.innerHTML = s_html;\n  }\n\n  attributeChangedCallback() {\n    this.render();\n  }\n\n  disconnectedCallback() {\n    this.childNodes[2].removeEventListener(\"change\", this.fontFamily);\n  }\n}\n","import { uptState, hideLoading } from \"../../utils/utils\";\nimport type { ImageSwitchType } from \"../../utils/types\";\nimport OpenSeadragon from \"openseadragon\";\n\nexport class ImageSwitch extends HTMLElement {\n  static get observedAttributes() {\n    return [\"opt\"];\n  }\n\n  connectedCallback() {\n    this.render();\n    // console.log(this.childNodes[3]);\n    this.childNodes[3].addEventListener(\"click\", this.viewerSwitch);\n  }\n\n  viewerSwitch() {\n    let data = \"image_switch\";\n\n    let id = this.getAttribute(\"id\");\n    // check if user set opt attribute\n    if (typeof id !== \"string\")\n      console.log(\"No 'opt' attribute in custom element font-family found!\");\n\n    let storage = sessionStorage.getItem(data);\n\n    if (storage) {\n      let options: ImageSwitchType = JSON.parse(storage);\n\n      if (!options) alert(\"Please turn on cookies to display content!\");\n\n      let url = new URL(location.href);\n      let urlParam = new URLSearchParams(url.search);\n\n      // variant is found by comparing variant config opt with custom element attr opt\n      var variant_check = options.variants.find((v) => v.opt === id);\n      var variant = variant_check ? variant_check : { opt: id ? id : \"image\" };\n\n      // check for option param or return default value\n      var active = options.active_class ? options.active_class : \"active\";\n\n      // check if sizes object with font sizes is not null or undefined\n      let hide_checked = variant.hide\n        ? variant.hide\n        : {\n            hidden: true,\n            class_to_hide: \"hide-container1\",\n            class_to_show: \"show-container1\",\n            class_parent: \"hide-show-wrapper\",\n            resize: \"resize-hide\",\n          };\n\n      // get classes from params for container to hide and show\n      let hide = hide_checked.class_to_hide\n        ? hide_checked.class_to_hide\n        : \"hide-container1\";\n      let show = hide_checked.class_to_show\n        ? hide_checked.class_to_show\n        : \"show-container1\";\n      let resize = hide_checked.resize ? hide_checked.resize : \"resize-hide\";\n\n      // get urlparam key\n      var urlparam = variant.urlparam ? variant.urlparam : \"image\";\n\n      // get fade class\n      let fade = variant.fade ? variant.fade : \"fade\";\n\n      // check if small column is set\n      let column_small_check = variant.column_small\n        ? variant.column_small\n        : {\n            class: \"col-md-6\",\n            percent: \"50\",\n          };\n\n      // check if sizes object with font sizes is not null or undefined\n      let column_full_checked = variant.column_full\n        ? variant.column_full\n        : {\n            class: \"col-md-12\",\n            percent: \"100\",\n          };\n\n      // get classes and style for hide show container resizing\n      let column_small = [\n        column_small_check.class ? column_small_check.class : \"col-md-6\",\n        column_small_check.percent ? column_small_check.percent : \"50\",\n      ];\n      let column_full = [\n        column_full_checked.class ? column_full_checked.class : \"col-md-12\",\n        column_full_checked.percent ? column_full_checked.percent : \"100\",\n      ];\n\n      if (urlParam.get(urlparam) == \"on\") {\n        urlParam.set(urlparam, \"off\");\n        document.querySelectorAll(`.${hide}`).forEach((el) => {\n          el.classList.add(fade);\n          el.classList.remove(column_small[0]);\n          // el.style.maxWidth = `${column_full[1]}%`;\n          el.classList.remove(active);\n        });\n        document.querySelectorAll(`.${show}`).forEach((el) => {\n          el.classList.remove(column_small[0]);\n          el.classList.add(column_full[0]);\n          // el.style.maxWidth = `${column_full[1]}%`;\n          el.classList.remove(active);\n        });\n        document.querySelectorAll(`.${resize}`).forEach((el) => {\n          el.classList.add(fade);\n        });\n        this.classList.remove(active);\n      } else {\n        urlParam.set(urlparam, \"on\");\n        document.querySelectorAll(`.${hide}`).forEach((el) => {\n          el.classList.remove(fade);\n          el.classList.add(column_small[0]);\n          // el.style.maxWidth = `${column_small[1]}%`;\n          el.classList.add(active);\n        });\n        document.querySelectorAll(`.${show}`).forEach((el) => {\n          el.classList.add(column_small[0]);\n          el.classList.remove(column_full[0]);\n          // el.style.maxWidth = `${\n          //   parseInt(column_full[1]) - parseInt(column_small[1])\n          // }%`;\n          el.classList.add(active);\n        });\n        document.querySelectorAll(`.${resize}`).forEach((el) => {\n          el.classList.remove(fade);\n        });\n\n        /* test if openseadragon is already loaded */\n        var osd_test = document.getElementsByClassName(\n          \"openseadragon-container\"\n        )[0];\n\n        if (!osd_test) {\n          /* initialize OpenSeardragon and get container and image url */\n\n          /* get image-loader custom element */\n          var image_loader = document.querySelectorAll(\"image-loader\");\n          var image_loader_type = image_loader[0].getAttribute(\"data-type\");\n          var image_loader_pos = image_loader[0].getAttribute(\"pos\");\n          var image = document.getElementById(\n            `${image_loader_type}_img_${image_loader_pos}`\n          );\n\n          /* get container to load osd in */\n          var _osd_container_id = `${image_loader_type}_container_${image_loader_pos}`;\n          var osd_container = document.getElementById(_osd_container_id);\n\n          /* get container with image-viewer element to be removed afer osd was loaded */\n          var osd_container_2 = document.getElementById(\n            `${image_loader_type}_container2_${image_loader_pos}`\n          );\n\n          /* get text container to set proper container height for osd viewer */\n          var text_container_height_get = document.getElementById(\n            `text-resize-${image_loader_pos}`\n          );\n          var text_container_height = text_container_height_get\n            ? text_container_height_get.offsetHeight\n            : 0;\n\n          /* get img container to set proper container width for osd viewer */\n          var image_container_width_get = document.getElementById(\n            `img-resize-${image_loader_pos}`\n          );\n\n          var image_container_width = image_container_width_get\n            ? image_container_width_get.offsetWidth\n            : 0;\n\n          /* set osd container width and height */\n          if (osd_container)\n            (osd_container.style.height = `${text_container_height / 1.2}px`),\n              (osd_container.style.width = `${image_container_width}px`);\n\n          /* get image url of iiif server */\n          let image_src = image\n            ? image.getAttribute(\"data-src\")\n            : \"no-image-url-found-in-data-src\";\n          let image_url = { type: \"image\", url: image_src };\n\n          /* initialize OpenSeadragon viewer */\n          let viewer = OpenSeadragon({\n            id: _osd_container_id,\n            prefixUrl:\n              \"https://cdnjs.cloudflare.com/ajax/libs/openseadragon/4.0.0/images/\",\n            tileSources: image_url,\n            // Initial rotation angle\n            // degrees: 90,\n            // Show rotation buttons\n            showRotationControl: true,\n            // Enable touch rotation on tactile devices\n            gestureSettingsTouch: {\n              pinchRotate: true,\n            },\n          });\n\n          // hides static images\n          if (osd_container_2) osd_container_2.remove();\n\n          // hide loading spinner if image fully loaded status changes\n          // see issue: https://github.com/openseadragon/openseadragon/issues/1262\n          viewer.addHandler(\"open\", function () {\n            let tiledImage = viewer.world.getItemAt(0);\n            if (tiledImage.getFullyLoaded()) {\n              hideLoading(_osd_container_id);\n            } else {\n              tiledImage.addOnceHandler(\"fully-loaded-change\", function () {\n                let spinnerID2 = \"spinner_\" + _osd_container_id;\n                let tmp = document.getElementById(spinnerID2);\n                if (tmp) tmp.remove();\n              });\n            }\n          });\n        } else {\n          /* works only with one image viewer */\n          // try {\n          //   var viewer_loaded = document.querySelector(\n          //     `.${parent}.${active} .${hide}`\n          //   ) as HTMLElement;\n          // } catch (err) {\n          //   console.log(\n          //     `HTML class elements .${parent}.${active} .${hide} not found. Please make sure your HTML site contains them.`\n          //   );\n          // }\n          // try {\n          //   var facs = viewer_loaded.querySelectorAll(\"*\")[0] as HTMLElement;\n          //   var facsContainer = facs.childNodes[0] as HTMLElement;\n          //   // set style height and width\n          //   // get iamge_size from params\n          //   // let image_size = paramCheck(variant.image_size, \"500px\");\n          //   facs.style.width = `${viewer_loaded.offsetWidth}px`;\n          //   facs.style.height = `${viewer_loaded.offsetHeight}px`;\n          //   facsContainer.style.width = `${viewer_loaded.offsetWidth - 25}px`;\n          //   facsContainer.style.height = `${\n          //     viewer_loaded.offsetHeight / 1.2\n          //   }px`;\n          // } catch (err) {\n          //   console.log(\n          //     `HTML class elements .${parent}.${active} .${hide} not found. Please make sure your HTML site contains them.`\n          //   );\n          // }\n        }\n\n        this.classList.add(active);\n      }\n\n      var stateName = variant.opt;\n      var stateParam = urlParam.get(variant.opt);\n      var state = {\n        [stateName]: stateParam,\n      };\n\n      // get citation url class and update citation\n      let citation_url_str = variant.chg_citation\n        ? variant.chg_citation\n        : \"citation-url\";\n      let citation_url = document.getElementById(citation_url_str);\n\n      let href = `?${urlParam}${location.hash}`;\n      uptState({\n        hist: false,\n        cit: citation_url,\n        state: state,\n        href: href,\n      });\n    }\n  }\n\n  render() {\n    let data = \"image_switch\";\n    let storage = sessionStorage.getItem(data);\n    if (storage === null) return;\n    let options: ImageSwitchType = JSON.parse(storage);\n\n    let opt = this.getAttribute(\"opt\");\n    // check if user set opt attribute\n    if (typeof opt !== \"string\")\n      console.log(\"No 'opt' attribute in custom element font-family found!\");\n\n    // variant is found by comparing variant config opt with custom element attr opt\n    var variant_check = options.variants.find((v) => v.opt === opt);\n    var variant = variant_check ? variant_check : { opt: opt ? opt : \"image\" };\n\n    // check if sizes object with font sizes is not null or undefined\n    let rendered_element = options.rendered_element\n      ? options.rendered_element\n      : {\n          a_class: \"nav-link btn btn-round\",\n          svg: \"<svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='currentColor' class='bi bi-image' viewBox='0 0 16 16'><path d='M6.002 5.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z'/><path d='M2.002 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2h-12zm12 1a1 1 0 0 1 1 1v6.5l-3.777-1.947a.5.5 0 0 0-.577.093l-3.71 3.71-2.66-1.772a.5.5 0 0 0-.63.062L1.002 12V3a1 1 0 0 1 1-1h12z'/></svg>\",\n        };\n\n    let active = options.active_class ? options.active_class : \"active\";\n    let var_title = variant.title ? variant.title : \"Facsimile on/off\";\n\n    this.innerHTML = `\n            <small><label style=\"padding:.2em;\">${var_title}:</label></small>\n            <a title=\"${var_title}\"\n                class=\"${rendered_element.a_class} ${active}\"\n                id=\"${variant.opt}\"\n                data-target=\"${data}\">\n                ${rendered_element.svg}\n            </a>\n        `;\n  }\n\n  attributeChangedCallback() {\n    this.render();\n  }\n\n  disconnectedCallback() {\n    this.childNodes[3].removeEventListener(\"click\", this.viewerSwitch);\n  }\n}\n","// @ts-noncheck\nimport { paramCheck } from \"../../utils/utils\";\nimport type { ImageLoaderType } from \"../../utils/types\";\n\nexport class ImageLoader extends HTMLElement {\n  static get observedAttributes() {\n    return [\"opt\", \"data-type\", \"data-source\", \"pos\"];\n  }\n\n  connectedCallback() {\n    this.render();\n  }\n\n  render() {\n    let data = \"image_loader\";\n    let storage = sessionStorage.getItem(data);\n    if (storage === null) return;\n    // get session storage (not all variables are required)\n    let options: ImageLoaderType = JSON.parse(storage);\n\n    // define url and param to access images\n    let url = paramCheck(options.url, \"provide-url\");\n    let url_param = paramCheck(\n      options.url_param,\n      \"provide-url-params (optional)\"\n    );\n\n    let pos = this.getAttribute(\"pos\");\n    // check if user set opt attribute\n    if (typeof pos !== \"string\") {\n      console.log(\"No 'opt' attribute in custom element font-family found!\");\n    }\n\n    let data_type = this.getAttribute(\"data-type\");\n    // check if user set opt attribute\n    if (typeof data_type !== \"string\") {\n      console.log(\"No 'opt' attribute in custom element font-family found!\");\n    }\n\n    let dataSource = this.getAttribute(\"data-source\");\n    // check if user set opt attribute\n    if (typeof dataSource !== \"string\") {\n      console.log(\"No 'opt' attribute in custom element font-family found!\");\n    }\n\n    this.innerHTML = `\n            <span id=\"${data_type}_img_${pos}\" data-src=\"${url}${dataSource}${url_param}\">Enable JavaScript to load image!</span>\n        `;\n  }\n}\n","import { uptState } from \"../../utils/utils\";\nimport type { PageUrlType } from \"../../utils/types\";\nimport OpenSeadragon from \"openseadragon\";\n\ntype Config = {\n  opt: string;\n  dataType?: string;\n  dataSource?: string;\n  pos?: string;\n};\nconst config: Array<Config> = [];\n\nexport class EditionPagination extends HTMLElement {\n  static get observedAttributes() {\n    return [\"opt\", \"pos\", \"facs\", \"data-type\"];\n  }\n\n  connectedCallback() {\n    this.render();\n    this.childNodes[1].addEventListener(\"click\", this.updateImgPage);\n  }\n\n  updateImgPage() {\n    let data = \"ed_pagination\";\n    let storage = sessionStorage.getItem(data);\n\n    if (storage) {\n      let options: PageUrlType = JSON.parse(storage);\n\n      // get urlparam\n      let url = new URL(window.location.href);\n      let urlParam = new URLSearchParams(url.search);\n\n      // get selected href\n      var get_href = this.getAttribute(\"href\");\n      var href = get_href ? get_href : \"provide-href\";\n      // check if user set opt attribute\n      if (typeof href !== \"string\") {\n        console.log(\"No 'href' attribute in custom element pagination found!\");\n      }\n      var dataTab = this.getAttribute(\"data-tab\");\n      // check if user set opt attribute\n      if (typeof href !== \"string\") {\n        console.log(\n          \"No 'data-tab' attribute in custom element pagination found!\"\n        );\n      }\n\n      // update urlparam\n      let urlparam = options.urlparam ? options.urlparam : \"page\";\n      urlParam.set(urlparam, href.replace(/[^0-9]+/, \"\"));\n      var state = {\n        [urlparam]: href.replace(/[^0-9]+/, \"\"),\n      };\n\n      // get citation url class and update citation\n      let citation_url_str = options.chg_citation\n        ? options.chg_citation\n        : \"citation-url\";\n      let citation_url = document.getElementById(citation_url_str);\n\n      let hrefState = `?${urlParam}${location.hash}`;\n      uptState({\n        hist: false,\n        cit: citation_url,\n        state: state,\n        href: hrefState,\n      });\n\n      // set all nav links to inactive\n      let pag_link = options.pag_link ? options.pag_link : \".pagination-link\";\n      let link = document.querySelectorAll(`${pag_link}`);\n      let active = options.active_class ? options.active_class : \"active\";\n      let bootstrap_class = options.bootstrap_class\n        ? options.bootstrap_class\n        : \"show\";\n      let pag_tab = options.pag_tab\n        ? options.pag_link\n        : \".pagination-tab.tab-pane\";\n\n      link.forEach((el) => {\n        el.classList.remove(active);\n        el.classList.remove(bootstrap_class);\n      });\n\n      // get all nav tabs matching the href and set to active\n      var ref = document.querySelectorAll(`${pag_link}[href=\"${href}\"]`);\n      ref.forEach((el) => {\n        el.classList.add(active);\n      });\n\n      // active tab\n      var tab = document.querySelectorAll(`${pag_tab}[data-tab=\"${dataTab}\"]`);\n      tab.forEach((el) => {\n        el.classList.remove(active);\n      });\n\n      // get pagination tab with selected link\n      var tab_ref = document.querySelectorAll(`${pag_tab}${href}`);\n      tab_ref.forEach((el) => {\n        el.classList.add(active);\n        el.classList.add(bootstrap_class);\n      });\n\n      // ###############\n      // load OSD Viewer\n      // ###############\n      let id = this.getAttribute(\"id\");\n      // variant is found by comparing variant config opt with custom element attr opt\n      var variant_check = config.find((v) => v.opt === id);\n      var variant = variant_check ? variant_check : { opt: id ? id : \"page\" };\n\n      let opt_url = options.url ? options.url : \"provide-url\";\n      let opt_urlparam = options.url_param ? options.url_param : \"pg\";\n      let opt_osd_target = options.osd_target\n        ? options.osd_target\n        : \"container\";\n      let opt_img_source = options.img_source\n        ? options.img_source\n        : \"container2\";\n      let opt_image_size = options.img_size ? options.img_size : \"500px\";\n\n      let dataSource = `${opt_url}${variant.dataSource}${opt_urlparam}`;\n      let targetID0 = `${variant.dataType}_${opt_osd_target}_${variant.pos}`;\n      let targetID1 = `${variant.dataType}_${opt_img_source}_${variant.pos}`;\n\n      // remove static images\n      var tmp = document.getElementById(targetID1);\n      if (tmp) tmp.remove();\n\n      let target = document.getElementById(targetID0) as HTMLElement;\n      if (target.childNodes.length === 0) {\n        target.style.height = opt_image_size;\n        // OpenSeaDragon Image Viewer\n        let imageURL = { type: \"image\", url: dataSource };\n        let viewer = OpenSeadragon({\n          id: targetID0,\n          prefixUrl:\n            \"https://cdnjs.cloudflare.com/ajax/libs/openseadragon/3.1.0/images/\",\n          tileSources: imageURL,\n          // Initial rotation angle\n          // degrees: 90,\n          // Show rotation buttons\n          showRotationControl: true,\n          // Enable touch rotation on tactile devices\n          gestureSettingsTouch: {\n            pinchRotate: true,\n          },\n        });\n\n        // hide loading spinner if image fully loaded status changes\n        // see issue: https://github.com/openseadragon/openseadragon/issues/1262\n        viewer.addHandler(\"open\", function () {\n          let tiledImage = viewer.world.getItemAt(0);\n          tiledImage.getFullyLoaded()\n            ? hideLoading()\n            : tiledImage.addOnceHandler(\"fully-loaded-change\", hideLoading);\n        });\n        function hideLoading() {\n          // var container = $(osd_container_id).attr(\"id\");\n          let spinnerID = \"spinner_\" + targetID0;\n          let tmp = document.getElementById(spinnerID);\n          if (tmp) tmp.remove();\n        }\n      }\n    }\n  }\n\n  render() {\n    let data_type = this.getAttribute(\"data-type\");\n    let pos = this.getAttribute(\"pos\");\n    // check if user set opt attribute\n    if (typeof pos !== \"string\") {\n      console.log(\"No 'pos' attribute in custom element pagination found!\");\n    }\n\n    let facs = this.getAttribute(\"facs\");\n    // check if user set opt attribute\n    if (typeof facs !== \"string\") {\n      console.log(\"No 'facs' attribute in custom element pagination found!\");\n    }\n\n    config.push({\n      opt: `${data_type}_link_${pos}`,\n      dataType: data_type ? data_type : \"paginate\",\n      dataSource: facs ? facs : \"facs\",\n      pos: pos ? pos : \"1\",\n    });\n\n    this.innerHTML = `\n            <a title=\"Tab ${pos}\"\n                class=\"nav-link pagination-link active\"\n                data-bs-toggle=\"tab\"\n                data-tab=\"paginate\"\n                id=\"${data_type}_link_${pos}\"\n                href=\"#paginate-${pos}\"\n                style=\"border-radius:30px;\">\n                ${pos}\n            </a>\n        `;\n  }\n}\n","type Config = {\n  opt: string;\n  pos: string;\n  size: string;\n};\nconst config: Array<Config> = [];\n\nexport class WindowResize extends HTMLElement {\n  static get observedAttributes() {\n    return [\"opt\", \"pos\"];\n  }\n\n  connectedCallback() {\n    this.render();\n    this.childNodes[1].childNodes[1].addEventListener(\"mousedown\", this.resize);\n  }\n\n  resize() {\n    var isResizing = true;\n\n    let id = this.getAttribute(\"id\");\n    let variant_check = config.find((v) => `${v.opt}-${v.pos}` === id);\n    let variant = variant_check\n      ? variant_check\n      : { opt: id ? id : \"resize\", pos: \"1\", size: \"0.5\" };\n\n    let container = document.getElementById(\n      `container-resize-${variant.pos}`\n    ) as HTMLElement;\n    let left_container = document.getElementById(\n      `text-resize-${variant.pos}`\n    ) as HTMLElement;\n    let right_container = document.getElementById(\n      `img-resize-${variant.pos}`\n    ) as HTMLElement;\n    let handle = document.getElementById(\n      `${variant.opt}-${variant.pos}`\n    ) as HTMLInputElement;\n    let viewer_wrapper = document.getElementById(\n      `viewer-${variant.pos}`\n    ) as HTMLElement;\n    let viewer = viewer_wrapper.childNodes[0] as HTMLElement;\n    let text = left_container.childNodes[0] as HTMLElement;\n\n    /* reset width height */\n    viewer_wrapper.style.width = \"\";\n    viewer_wrapper.style.height = \"\";\n\n    document.addEventListener(\"mousemove\", (e) => {\n      // we don't want to do anything if we aren't resizing.\n      if (!isResizing) return;\n\n      let value: number | string = handle.value;\n\n      let offsetLeft = container.offsetWidth - e.clientX;\n      let offsetRight = container.offsetWidth - parseInt(value);\n      let w = window.innerWidth;\n\n      if (parseInt(value) < w * parseFloat(variant.size) - 10) {\n        left_container.style.maxWidth = `${\n          container.offsetWidth - offsetLeft\n        }px`;\n        right_container.style.maxWidth = `${offsetLeft}px`;\n        viewer.style.width = `${offsetLeft}px`;\n        viewer.style.height = `${offsetLeft}px`;\n      } else if (parseInt(value) > w * parseFloat(variant.size) + 10) {\n        left_container.style.maxWidth = `${value}px`;\n        text.style.width = `${value}px`;\n        right_container.style.maxWidth = `${offsetRight}px`;\n        viewer.style.width = `${offsetRight}px`;\n        viewer.style.height = `${offsetRight}px`;\n      } else if (\n        parseInt(value) === w * parseFloat(variant.size) + 9 ||\n        parseInt(value) === w * parseFloat(variant.size) - 9\n      ) {\n        left_container.style.maxWidth = `${parseFloat(variant.size) * 100}%`;\n        text.style.width = `${parseFloat(variant.size) * 100}%`;\n        right_container.style.maxWidth = `${\n          (1 - parseFloat(variant.size)) * 100\n        }%`;\n        viewer.style.width = `${right_container.offsetWidth}px`;\n        viewer.style.height = `${right_container.offsetHeight}px`;\n      }\n    });\n\n    document.addEventListener(\"mouseup\", function () {\n      // stop resizing\n      isResizing = false;\n    });\n  }\n\n  render() {\n    let w = window.innerWidth;\n\n    let opt = this.getAttribute(\"opt\");\n    // check if user set opt attribute\n    if (typeof opt !== \"string\") {\n      console.log(\"No 'opt' attribute in custom element window-resize found!\");\n    }\n    let pos = this.getAttribute(\"pos\");\n    // check if user set opt attribute\n    if (typeof pos !== \"string\") {\n      console.log(\"No 'pos' attribute in custom element window-resize found!\");\n    }\n    let size_check = this.getAttribute(\"size\");\n    // check if user set opt attribute\n    let size = size_check ? size_check : \"0.5\";\n\n    config.push({\n      opt: opt ? opt : \"resize\",\n      pos: pos ? pos : \"1\",\n      size: size ? size : \"0.5\",\n    });\n\n    this.innerHTML = `\n            <div class=\"expand-wrapper text-center resize-hide\">\n                <input title=\"change size\" id=\"${opt}-${pos}\" type=\"range\" min=\"0\" max=\"${w}\" value=\"${\n      w * parseFloat(size)\n    }\" class=\"slider\"/>\n            </div>\n        `;\n  }\n}\n","import {\n  uptState,\n  addMarkup,\n  removeMarkup,\n  hideLoading,\n} from \"../../utils/utils\";\nimport type {\n  FullScreenType,\n  FontSizeType,\n  FontFamilyType,\n  ImageSwitchType,\n  AnnotationType,\n  Variant,\n  PageUrlType,\n  MultiLanguageType,\n} from \"../../utils/types\";\nimport OpenSeadragon from \"openseadragon\";\n\nexport class UrlSearchParamUpdate {\n  fullScreen() {\n    // get custom element and access opt attribute\n    let el = document.getElementsByTagName(\n      \"full-size\"\n    ) as HTMLCollectionOf<Element>;\n    let opt_check = el[0].getAttribute(\"opt\");\n    let opt = opt_check ? opt_check : \"fullscreen\";\n    if (typeof opt !== \"string\")\n      console.log(\"No 'opt' attribute in custom element font-size found!\");\n\n    // session storage key\n    // get config by accessing sessions storage cookies\n    let data: string = \"fullsize\";\n    let storage = sessionStorage.getItem(data);\n    if (storage === null) return;\n    var options: FullScreenType = JSON.parse(storage);\n    if (!options) {\n      alert(\"Please turn on cookies to display content!\");\n    }\n\n    // to manipulate url parameters construct url by getting current url\n    let url = new URL(location.href);\n    let urlParam = new URLSearchParams(url.search);\n\n    // variant is found by comparing variant config opt with custom element attr opt\n    var variant_check = options.variants.find((v: any) => v.opt === opt);\n    var variant = variant_check\n      ? variant_check\n      : {\n          opt: opt ? opt : \"fullscreen\",\n        };\n\n    // if variant obj contains urlparam string check urlparams parameters\n    var urlparam = variant.urlparam ? variant.urlparam : \"fullscreen\";\n\n    // check for option param or return default value\n    var active = options.active_class ? options.active_class : \"active\";\n    var hide = variant.hide ? variant.hide : \"hide-container\";\n    var hidden = variant.to_hide ? variant.to_hide : \"fade\";\n\n    if (urlParam.get(urlparam) == null) urlParam.set(urlparam, \"off\");\n\n    if (urlParam.get(urlparam) !== \"on\" || urlParam.get(urlparam) !== \"off\")\n      console.log(\n        `fullscreen=${urlParam.get(urlparam)} is not a selectable option.`\n      ),\n        urlParam.set(urlparam, \"off\");\n\n    if (urlParam.get(urlparam) == \"off\") {\n      let hide_class: NodeListOf<Element> = document.querySelectorAll(\n        `.${hide}`\n      );\n      [...hide_class].forEach((el) => {\n        el.classList.remove(hidden);\n        let svg_show: string = `<svg xmlns=\"http://www.w3.org/2000/svg\"\n                               width=\"16\"\n                               height=\"16\"\n                               fill=\"currentColor\"\n                               class=\"bi bi-fullscreen\"\n                               viewBox=\"0 0 16 16\">\n                            <path d=\"M1.5 1a.5.5 0 0 0-.5.5v4a.5.5 0 0 1-1 0v-4A1.5 1.5 0 0 1 1.5 0h4a.5.5 0 0 1 0 1h-4zM10 .5a.5.5 0 0 1 .5-.5h4A1.5 1.5 0 0 1 16 1.5v4a.5.5 0 0 1-1 0v-4a.5.5 0 0 0-.5-.5h-4a.5.5 0 0 1-.5-.5zM.5 10a.5.5 0 0 1 .5.5v4a.5.5 0 0 0 .5.5h4a.5.5 0 0 1 0 1h-4A1.5 1.5 0 0 1 0 14.5v-4a.5.5 0 0 1 .5-.5zm15 0a.5.5 0 0 1 .5.5v4a1.5 1.5 0 0 1-1.5 1.5h-4a.5.5 0 0 1 0-1h4a.5.5 0 0 0 .5-.5v-4a.5.5 0 0 1 .5-.5z\"/>\n                          </svg>`;\n        let btn = document.getElementById(opt) as HTMLElement;\n        btn.innerHTML = svg_show;\n        btn.classList.remove(active);\n\n        /* if value is off it should not be part of the urlsearchparams */\n        urlParam.delete(urlparam);\n      });\n    }\n\n    if (urlParam.get(urlparam) == \"on\") {\n      let hide_class: NodeListOf<Element> = document.querySelectorAll(\n        `.${hide}`\n      );\n      [...hide_class].forEach((el: any) => {\n        el.classList.add(hidden);\n        let svg_hide = `<svg xmlns=\"http://www.w3.org/2000/svg\"\n                               width=\"16\"\n                               height=\"16\"\n                               fill=\"currentColor\"\n                               class=\"bi bi-fullscreen-exit\"\n                               viewBox=\"0 0 16 16\">\n                            <path d=\"M5.5 0a.5.5 0 0 1 .5.5v4A1.5 1.5 0 0 1 4.5 6h-4a.5.5 0 0 1 0-1h4a.5.5 0 0 0 .5-.5v-4a.5.5 0 0 1 .5-.5zm5 0a.5.5 0 0 1 .5.5v4a.5.5 0 0 0 .5.5h4a.5.5 0 0 1 0 1h-4A1.5 1.5 0 0 1 10 4.5v-4a.5.5 0 0 1 .5-.5zM0 10.5a.5.5 0 0 1 .5-.5h4A1.5 1.5 0 0 1 6 11.5v4a.5.5 0 0 1-1 0v-4a.5.5 0 0 0-.5-.5h-4a.5.5 0 0 1-.5-.5zm10 1a1.5 1.5 0 0 1 1.5-1.5h4a.5.5 0 0 1 0 1h-4a.5.5 0 0 0-.5.5v4a.5.5 0 0 1-1 0v-4z\"/>\n                          </svg>`;\n        let btn = document.getElementById(opt) as HTMLElement;\n        btn.innerHTML = svg_hide;\n        btn.classList.add(active);\n      });\n    }\n\n    // citation-url is an HTMLElement that is used to update the citation\n    var citation_url_str = variant.chg_citation\n      ? variant.chg_citation\n      : \"citation-url\";\n    var citation_url = document.getElementById(citation_url_str) as HTMLElement;\n\n    // update browser history state\n    let href: string = `?${urlParam}${location.hash}`;\n    uptState({\n      hist: true,\n      cit: citation_url,\n      state: false,\n      href: href,\n    });\n  }\n\n  fontSize() {\n    // get element to access opt attribute\n    // opt required to connect to specific custom element\n    let el = document.getElementsByTagName(\n      \"font-size\"\n    ) as HTMLCollectionOf<Element>;\n    var id = el[0].getAttribute(\"opt\");\n\n    // check if user set opt attribute\n    if (typeof id !== \"string\") {\n      console.log(\"No 'opt' attribute in custom element font-size found!\");\n    }\n\n    // string fontsize is variable to access session cookies\n    let data = \"fontsize\";\n    let storage: string | null = sessionStorage.getItem(data);\n\n    if (storage) {\n      // define options object and parse session cookie as json\n      var options: FontSizeType = JSON.parse(storage);\n\n      if (!options) {\n        alert(\"Please turn on cookies to display content!\");\n      }\n\n      // get url and urlparams to manipulate and update\n      let url = new URL(location.href);\n      let urlParam = new URLSearchParams(url.search);\n\n      // variant is found by comparing variant config opt with custom element attr opt\n      var variants = options.variants\n        ? options.variants\n        : [{ opt: id ? id : \"font-size\" }];\n      [...variants].forEach((v) => {\n        // get urlparam key\n        var urlparam = v.urlparam ? v.urlparam : \"fontsize\";\n\n        // get citation url key and HTMLElement\n        var citation_url_str = v.chg_citation ? v.chg_citation : \"citation-url\";\n        var citation_url = document.getElementById(\n          citation_url_str\n        ) as HTMLElement;\n\n        // define paragraph HTML element name\n        let p_change = v.paragraph ? v.paragraph : \"p\";\n        // define class to change font sizes (not all paragraphs might need to be changed)\n        let p_class = v.p_class ? v.p_class : \"yes-index\";\n\n        // check if sizes object with font sizes is not null or undefined\n        let size = v.sizes\n          ? v.sizes\n          : {\n              default: \"default\",\n              font_size_14: \"14\",\n              font_size_18: \"18\",\n              font_size_22: \"22\",\n              font_size_26: \"26\",\n            };\n\n        // define font size name before size\n        var css_class = v.css_class ? v.css_class : \"font-size-\";\n\n        // check for null value in url params\n        if (urlParam.get(urlparam) == null) {\n          urlParam.set(urlparam, \"default\");\n        }\n\n        // check if provided urlparam value is selectable\n        var url_value = urlParam.get(urlparam);\n        if (!Object.values(size).includes(url_value ? url_value : \"default\")) {\n          console.log(\n            `${urlparam}=${urlParam.get(urlparam)} is not a selectable option.`\n          );\n          urlParam.set(urlparam, \"default\");\n        } else {\n          // if valid urlparam is found change font sizes of paragraphs\n          let paragraph = document.querySelectorAll(\n            `${p_change}.${p_class}`\n          ) as NodeListOf<Element>;\n\n          var new_value =\n            urlParam.get(urlparam) !== \"default\"\n              ? css_class + urlParam.get(urlparam)\n              : urlParam.get(urlparam);\n\n          // change select option value based on provided url param\n          var select = document.getElementById(v.opt) as HTMLSelectElement;\n          select\n            ? (select.value = new_value ? new_value : \"\")\n            : console.log(\"No select found!\");\n\n          // finally, changing selected paragraph font size\n          [...paragraph].forEach((el) => {\n            for (let s in size) {\n              if (size[s] !== \"default\") {\n                el.classList.remove(css_class + size[s]);\n              }\n            }\n            if (new_value !== \"default\") {\n              el.classList.add(new_value ? new_value : \"\");\n            }\n          });\n        }\n        /* if value is off it should not be part of the urlsearchparams */\n        if (urlParam.get(urlparam) == \"default\") {\n          urlParam.delete(urlparam);\n        }\n\n        // change browser history state\n        let href = `?${urlParam}${location.hash}`;\n        uptState({\n          hist: true,\n          cit: citation_url,\n          state: false,\n          href: href,\n        });\n      });\n    }\n  }\n\n  fontFamily() {\n    let el = document.getElementsByTagName(\"font-family\");\n    let id = el[0].getAttribute(\"opt\");\n    // check if user set opt attribute\n    if (typeof id !== \"string\") {\n      console.log(\"No 'opt' attribute in custom element font-family found!\");\n    }\n\n    let data = \"font_family\";\n    let storage = sessionStorage.getItem(data);\n\n    if (storage === null) return;\n    let options: FontFamilyType = JSON.parse(storage);\n\n    if (!options) {\n      alert(\"Please turn on cookies to display content!\");\n    }\n\n    let url = new URL(location.href);\n    let urlParam = new URLSearchParams(url.search);\n\n    // variant is found by comparing variant config opt with custom element attr opt\n    var variants = options.variants\n      ? options.variants\n      : [{ opt: id ? id : \"font-family\" }];\n    [...variants].forEach((v) => {\n      // get urlparam key\n      var urlparam = v.urlparam ? v.urlparam : \"font\";\n\n      // get citation url key and HTMLElement\n      var citation_url_str = v.chg_citation ? v.chg_citation : \"citation-url\";\n      var citation_url = document.getElementById(\n        citation_url_str\n      ) as HTMLElement;\n\n      // define paragraph HTML element name\n      let p_change = v.paragraph ? v.paragraph : \"p\";\n      // define class to change font sizes (not all paragraphs might need to be changed)\n      let p_class = v.p_class ? v.p_class : \"yes-index\";\n\n      // check if sizes object with font sizes is not null or undefined\n      let family = v.fonts\n        ? v.fonts\n        : {\n            default: \"default\",\n            font1: \"Times-New-Roman\",\n            font2: \"Courier-New\",\n            font3: \"Arial-serif\",\n          };\n\n      if (urlParam.get(urlparam) == null) {\n        urlParam.set(urlparam, \"default\");\n      }\n      let url_value = urlParam.get(urlparam);\n      if (!Object.values(family).includes(url_value ? url_value : \"default\")) {\n        console.log(\n          `font=${urlParam.get(urlparam)} is not a selectable option.`\n        );\n        urlParam.set(urlparam, \"default\");\n      } else {\n        let paragraph = document.querySelectorAll(\n          `${p_change}.${p_class}`\n        ) as NodeListOf<Element>;\n\n        if (urlParam.get(urlparam) !== \"default\") {\n          var new_value = urlParam.get(urlparam);\n        } else {\n          var new_value = urlParam.get(urlparam);\n        }\n\n        // change select option value based on provided url param\n        var select = document.getElementById(v.opt) as HTMLSelectElement;\n        select\n          ? (select.value = new_value ? new_value : \"\")\n          : console.log(\"No select found!\");\n\n        // finally, change font-size of selected paragraphs\n        [...paragraph].forEach((el) => {\n          for (let f in family) {\n            if (family[f] !== \"default\") {\n              el.classList.remove(family[f].toLowerCase());\n            }\n          }\n          if (new_value !== \"default\") {\n            el.classList.add(new_value ? new_value.toLowerCase() : \"\");\n          }\n        });\n      }\n      /* if value is off it should not be part of the urlsearchparams */\n      if (urlParam.get(urlparam) == \"default\") {\n        urlParam.delete(urlparam);\n      }\n\n      // update browser history state\n      let href: string = `?${urlParam}${location.hash}`;\n      uptState({\n        hist: true,\n        cit: citation_url,\n        state: false,\n        href: href,\n      });\n    });\n  }\n\n  viewerSwitch() {\n    let el = document.querySelectorAll(\"image-switch\") as NodeListOf<Element>;\n    let opt_check = el[0].getAttribute(\"opt\");\n    let opt = opt_check ? opt_check : \"image-switch\";\n    // check if user set opt attribute\n    if (typeof opt !== \"string\") {\n      console.log(\"No 'opt' attribute in custom element font-family found!\");\n    }\n\n    let data = \"image_switch\";\n    let storage = sessionStorage.getItem(data);\n\n    if (storage === null) return;\n    let options: ImageSwitchType = JSON.parse(storage);\n    if (!options) {\n      alert(\"Please turn on cookies to display content!\");\n    }\n\n    let url = new URL(location.href);\n    let urlParam = new URLSearchParams(url.search);\n\n    // variant is found by comparing variant config opt with custom element attr opt\n    var variant_check = options.variants.find((v) => v.opt === opt);\n    var variant = variant_check\n      ? variant_check\n      : {\n          opt: opt ? opt : \"image-switch\",\n        };\n\n    // check for option param or return default value\n    var active = options.active_class ? options.active_class : \"active\";\n\n    // check if sizes object with font sizes is not null or undefined\n    let hide_checked = variant.hide\n      ? variant.hide\n      : {\n          hidden: true,\n          class_to_hide: \"hide-container1\",\n          class_to_show: \"show-container1\",\n          class_parent: \"hide-show-wrapper\",\n          resize: \"resize-hide\",\n        };\n\n    // get classes from params for container to hide and show\n    let hide = hide_checked.class_to_hide\n      ? hide_checked.class_to_hide\n      : \"hide-container1\";\n    let show = hide_checked.class_to_show\n      ? hide_checked.class_to_show\n      : \"show-container1\";\n    let resize = hide_checked.resize ? hide_checked.resize : \"resize-hide\";\n\n    // get urlparam key\n    var urlparam = variant.urlparam ? variant.urlparam : \"image\";\n\n    // get fade class\n    let fade = variant.fade ? variant.fade : \"fade\";\n\n    // check if sizes object with font sizes is not null or undefined\n    let column_small_check = variant.column_small\n      ? variant.column_small\n      : {\n          class: \"col-md-6\",\n          percent: \"50%\",\n        };\n\n    // check if sizes object with font sizes is not null or undefined\n    let column_full_checked = variant.column_full\n      ? variant.column_full\n      : {\n          class: \"col-md-12\",\n          percent: \"100%\",\n        };\n\n    // get classes and style for hide show container resizing\n    let column_small: any[] = [\n      column_small_check.class ? column_small_check.class : \"col-md-6\",\n      column_small_check.percent ? column_small_check.percent : \"50%\",\n    ];\n    let column_full: any[] = [\n      column_full_checked.class ? column_full_checked.class : \"col-md-12\",\n      column_full_checked.percent ? column_full_checked.percent : \"100%\",\n    ];\n\n    // check if urlparam value is null and set to default\n    if (urlParam.get(urlparam) == null) {\n      urlParam.set(urlparam, \"off\");\n    }\n\n    // if urlparam value is not valid set to default\n    let url_value = urlParam.get(urlparam);\n    if (![\"on\", \"off\"].includes(url_value ? url_value : \"off\")) {\n      console.log(\n        `image=${urlParam.get(urlparam)} is not a selectable option.`\n      );\n      urlParam.delete(urlparam);\n    }\n\n    // if urlparam value is 'on' show container\n    if (urlParam.get(urlparam) == \"on\") {\n      let hide_elements = document.querySelectorAll(\n        `.${hide}`\n      ) as NodeListOf<HTMLElement>;\n      [...hide_elements].forEach((el: HTMLElement) => {\n        el.classList.remove(fade);\n        el.classList.add(column_small[0]);\n        el.style.maxWidth = column_small[1];\n        el.classList.add(active);\n      });\n\n      let show_elements = document.querySelectorAll(\n        `.${show}`\n      ) as NodeListOf<HTMLElement>;\n      [...show_elements].forEach((el: HTMLElement) => {\n        el.classList.add(column_small[0]);\n        el.classList.remove(column_full[0]);\n        el.style.maxWidth = column_small[1];\n        el.classList.add(active);\n      });\n      let resize_elements = document.querySelectorAll(\n        `.${resize}`\n      ) as NodeListOf<HTMLElement>;\n      [...resize_elements].forEach((el: HTMLElement) => {\n        el.classList.remove(fade);\n      });\n      let checkbox = document.getElementById(opt) as HTMLElement;\n      checkbox.classList.add(active);\n    }\n\n    // if urlparam value is 'off' hide container\n    if (urlParam.get(urlparam) == \"off\") {\n      let hide_elements = document.querySelectorAll(\n        `.${hide}`\n      ) as NodeListOf<HTMLElement>;\n      [...hide_elements].forEach((el: HTMLElement) => {\n        el.classList.add(fade);\n        el.classList.remove(column_small[0]);\n        el.style.maxWidth = column_full[1];\n        el.classList.remove(active);\n      });\n\n      let show_elements = document.querySelectorAll(\n        `.${show}`\n      ) as NodeListOf<HTMLElement>;\n      [...show_elements].forEach((el: HTMLElement) => {\n        el.classList.remove(column_small[0]);\n        el.classList.add(column_full[0]);\n        el.style.maxWidth = column_full[1];\n        el.classList.remove(active);\n      });\n\n      let resize_elements = document.querySelectorAll(\n        `.${resize}`\n      ) as NodeListOf<HTMLElement>;\n      [...resize_elements].forEach((el: HTMLElement) => {\n        el.classList.add(fade);\n      });\n\n      // works only with one image viewer\n      // try {\n      //   var viewer = document.querySelector(\n      //     `.${parent}.${active} .${hide}`\n      //   ) as HTMLElement;\n      // } catch (err) {\n      //   console.log(\n      //     `HTML class elements .${parent}.${active} .${hide} not found. Please make sure your HTML site contains them.`\n      //   );\n      // }\n\n      // try {\n      //   var facs = viewer.querySelectorAll(\"*\")[0] as HTMLElement;\n      //   // set style height and width\n      //   // get iamge_size from params\n      //   // let image_size = paramCheck(variant.image_size, \"500px\");\n      //   facs.style.width = `${viewer.offsetWidth}px`;\n      //   facs.style.height = `${viewer.offsetHeight}px`;\n      // } catch (err) {\n      //   console.log(\n      //     `HTML class elements .${parent}.${active} .${hide} not found. Please make sure your HTML site contains them.`\n      //   );\n      // }\n\n      // remove active class\n      let checkbox = document.getElementById(opt) as HTMLElement;\n      checkbox.classList.remove(active);\n\n      /* if value is off it should not be part of the urlsearchparams */\n      urlParam.delete(urlparam);\n    }\n\n    // get citation url class and update citation\n    let citation_url_str = variant.chg_citation\n      ? variant.chg_citation\n      : \"citation-url\";\n    let citation_url = document.getElementById(citation_url_str) as HTMLElement;\n\n    // update browser history state\n    let href: string = `?${urlParam}${location.hash}`;\n    uptState({\n      hist: true,\n      cit: citation_url,\n      state: false,\n      href: href,\n    });\n  }\n\n  textFeatures() {\n    // get key for session storage and access coockies\n    let data = \"annotation_slider\";\n    let storage = sessionStorage.getItem(data);\n    if (storage === null) return;\n\n    let options: AnnotationType = JSON.parse(storage);\n\n    if (!options) {\n      alert(`WARNING 1 - search_params/main: Please turn on cookies to display content.\\n\n              Or check if configuration files path match data-target and data-path property.`);\n    }\n\n    // define url and urlparams to manipulate and update\n    let url = new URL(location.href);\n    let urlParam = new URLSearchParams(url.search);\n\n    // ########################################################################\n    // before using any config parameters check if they are defined\n    // if not create default parameters to continue\n    // ########################################################################\n\n    // variantAll is the group leader that controls the others\n    // it is determent by setting the features.all key to true and\n    // by sharing the same features.class in your config file\n    var variant_all_check = options.variants.filter(\n      (v: any) => v.features.all === true\n    );\n    let variantAll = variant_all_check\n      ? variant_all_check\n      : [\n          {\n            opt: \"text-features\",\n            features: {\n              all: true,\n              class: \"all-features\",\n            },\n          },\n        ];\n\n    // variant is found by comparing variant config opt with custom element attr opt\n    var variant_check = options.variants.filter(\n      (v) => v.features.all === false\n    );\n    let allVariants: NodeListOf<Element> =\n      document.querySelectorAll(\"annotation-slider\");\n\n    var allVariantsObjs: Array<Variant> = [];\n    [...allVariants].forEach((el) => {\n      var attrOpt_check = el.getAttribute(\"opt\");\n      var attrOpt = attrOpt_check ? attrOpt_check : \"text-features\";\n      if (attrOpt.length > 0) {\n        allVariantsObjs.push({\n          opt: attrOpt,\n          features: {\n            all: false,\n            class: \"single-feature\",\n          },\n        });\n      }\n    });\n    let variants = variant_check ? variant_check : allVariantsObjs;\n\n    // in case user config input for features.all is not a boolean value\n    // return Warning 6\n    var variant_check_bool = options.variants.filter(\n      (v) => typeof v.features.all !== \"boolean\"\n    );\n    let wrg_ft: Array<Variant> = variant_check_bool ? variant_check_bool : [];\n    if (wrg_ft) {\n      for (let w of wrg_ft) {\n        console.log(\n          `WARNING 6 - search_params/main: Type of variant ${w} config.\\n\n            \"features.all\" must be boolean (true or false)`\n        );\n      }\n    }\n\n    // check if span_element object is provided\n    // set to default params of not\n    let style = options.span_element\n      ? options.span_element\n      : {\n          css_class: \"badge-item\",\n        };\n\n    let active = options.active_class ? options.active_class : \"active\";\n\n    // set count to verify state of sliders\n    let count_active: {\n      [key: string]: number;\n    } = {};\n\n    // create general count for all sliders for each provided html element found\n    // that is connected to the slider via variants.html_class\n    let count: number = 0;\n\n    // ##############################################################################################\n    // task result 1: add markup to html element,\n    //                add active class to checkbox,\n    //                add data attribute to slider\n    // task result 2: remove markup from html element,\n    //                remove active class from checkbox,\n    //                remove data attribute from slider\n    // ****general task****: loop through all variants and check variant.opt against urlparam value\n    // task 1: allowed values = 'on' or 'off' -> task result 1 or 2\n    // task 2: values other than 'on' or 'off' are not selectable -> return warning -> task result 2\n    // task 3: if value is null check if variant has default value true:\n    // * if null and default: true -> task result 1\n    // * if null and default: false -> task result 2\n    // ##############################################################################################\n    [...variants].forEach((v: Variant, idx) => {\n      // paramCheck verifies if config is avaliable\n      // if not default parameters are created\n      let opt = v.opt ? v.opt : `any-feature-${idx}`;\n      let opt_class = v.features.class ? v.features.class : `class-${opt}`;\n      let color = v.color ? v.color : `color-${opt}`;\n      let html_class = v.html_class ? v.html_class : `html-class-${opt}`;\n      let css_class = v.css_class ? v.css_class : `css-class-${opt}`;\n      let opt_slider = v.opt_slider ? v.opt_slider : `${opt}-slider`;\n      let hide = v.hide ? v.hide : { hidden: true, class: \"hide\" };\n      let url_value = urlParam.get(opt);\n      if (url_value === null) {\n        // ##############################################\n        // check if urlparam is null\n        // if true also check if variant default is true\n        // ##############################################\n        if (v.default === true) {\n          // if default is true\n          // count active sliders of each given features.class\n          if (count_active.hasOwnProperty(opt_class)) {\n            count_active[opt_class] += 1;\n          } else {\n            count_active[opt_class] = 1;\n          }\n          // add markup to html elemet\n          let selected = addMarkup(html_class, css_class, color, hide, style);\n          try {\n            let slider = document.getElementById(opt_slider) as HTMLElement;\n            slider.setAttribute(\"data\", selected);\n            count += parseInt(selected);\n            slider.classList.add(\"slider-number\");\n            slider.classList.add(color);\n            urlParam.set(opt, \"on\");\n          } catch (err) {\n            console.log(`slider class ${opt_slider} not found!`);\n          }\n\n          // update checkbox: add active class and checked attribute\n          let checkbox = document.getElementById(opt) as HTMLInputElement;\n          if (checkbox.checked === false) {\n            checkbox.checked = true;\n            checkbox.classList.add(active);\n          }\n        } else {\n          // if default is false\n          // remove markup from html element\n          removeMarkup(html_class, css_class, color, hide, style);\n\n          // update slider: remove color, data, slider-number class\n          try {\n            let slider = document.getElementById(opt_slider) as HTMLElement;\n            slider.classList.remove(color);\n            slider.removeAttribute(\"data\");\n            slider.classList.remove(\"slider-number\");\n          } catch (err) {\n            console.log(\n              `WARNING 7 - search_params/main: slider class ${opt_slider} not found!`\n            );\n          }\n\n          // update checkbox: remove active class and checked attribute\n          let checkbox = document.getElementById(opt) as HTMLInputElement;\n          if (checkbox.checked === true) {\n            checkbox.checked = false;\n            checkbox.classList.remove(active);\n          }\n        }\n      } else if (![\"on\", \"off\"].includes(url_value)) {\n        // ########################################################\n        // if urlparam is not null and not on or off return warning\n        // ########################################################\n        console.log(`${opt}=${urlParam.get(opt)} is not a selectable option.`);\n        urlParam.delete(opt);\n\n        // add markup to html element\n        removeMarkup(html_class, css_class, color, hide, style);\n\n        // update slider: remove color, data, slider-number class\n        try {\n          let slider = document.getElementById(opt_slider) as HTMLElement;\n          slider.classList.remove(color);\n          slider.removeAttribute(\"data\");\n          slider.classList.remove(\"slider-number\");\n        } catch (err) {\n          console.log(\n            `WARNING 8 - search_params/main: slider class ${opt_slider} not found!`\n          );\n        }\n\n        // update checkbox: remove active class and checked attribute\n        let checkbox = document.getElementById(opt) as HTMLInputElement;\n        if (checkbox.checked === true) {\n          checkbox.checked = false;\n          checkbox.classList.remove(active);\n        }\n      } else if (urlParam.get(opt) === \"on\") {\n        // ##############################################\n        // ############ if urlparam is on ###############\n        // ##############################################\n\n        // count active sliders of each given features.class\n        count_active.hasOwnProperty(opt_class)\n          ? (count_active[opt_class] += 1)\n          : (count_active[opt_class] = 1);\n\n        // remove markup from html element\n        let selected = addMarkup(html_class, css_class, color, hide, style);\n\n        // update slider: add color, data, slider-number class\n        try {\n          let slider = document.getElementById(opt_slider) as HTMLElement;\n          slider.setAttribute(\"data\", selected);\n          count += parseInt(selected);\n          slider.classList.add(\"slider-number\");\n          slider.classList.add(color);\n        } catch (err) {\n          console.log(\n            `WARNING 9 - search_params/main: slider class ${opt_slider} not found!`\n          );\n        }\n\n        // update checkbox: add active class and checked attribute\n        let checkbox = document.getElementById(opt) as HTMLInputElement;\n        if (checkbox.checked === false)\n          (checkbox.checked = true), checkbox.classList.add(active);\n      } else if (urlParam.get(opt) === \"off\") {\n        // ##############################################\n        // ######### urlparam value is off ##############\n        // ##############################################\n\n        // remove markup from html element\n        removeMarkup(html_class, css_class, color, hide, style);\n\n        // update slider: remove color, data, slider-number class\n        try {\n          let slider = document.getElementById(opt_slider) as HTMLElement;\n          slider.classList.remove(color);\n          slider.removeAttribute(\"data\");\n          slider.classList.remove(\"slider-number\");\n        } catch (err) {\n          console.log(\n            `WARNING 10 - search_params/main: slider class ${opt_slider} not found!`\n          );\n        }\n\n        // update checkbox: remove active class and checked attribute\n        let checkbox = document.getElementById(opt) as HTMLInputElement;\n        if (checkbox.checked === true) {\n          checkbox.checked = false;\n          checkbox.classList.remove(active);\n        }\n\n        /* default value e.g. off should not be added to url */\n        urlParam.delete(opt);\n      }\n\n      let citation_url_str = v.chg_citation ? v.chg_citation : \"citation-url\";\n      var citation_url = document.getElementById(citation_url_str);\n      // ########################################################################\n      // uptState changes the browser history state to reflect the current state\n      // of all variants (html elements, slider, checkbox) and their urlparams\n      let href: string = `?${urlParam}${location.hash}`;\n      uptState({\n        hist: true,\n        cit: citation_url ? citation_url : false,\n        state: false,\n        href: href,\n      });\n    });\n\n    // ####################################################################################\n    // handling features.all slider to receive active or inactive status\n    // algorithm:\n    // if all group variants are active turn group leader active -> task result 1\n    // if none or not all variants are active turn group leader inactive -> task result 2\n    [...variantAll].forEach((el) => {\n      let optAll = el.opt ? el.opt : `all-features`;\n      var feat_leader = document.getElementById(optAll) as HTMLInputElement;\n      var feat_leader_class = el.features.class;\n      var variants_features_class = variants.filter(\n        (v) => v.features.class === feat_leader_class\n      );\n      if (count_active[feat_leader_class] === variants_features_class.length) {\n        if (feat_leader.checked === false) {\n          feat_leader.checked = true;\n          feat_leader.classList.add(active);\n          feat_leader.classList.add(\"slider-number\");\n          feat_leader.setAttribute(\"data\", String(count));\n        }\n      } else {\n        if (feat_leader.checked === true) {\n          feat_leader.checked = false;\n          feat_leader.classList.remove(active);\n          feat_leader.removeAttribute(\"data\");\n          feat_leader.classList.remove(\"slider-number\");\n        }\n      }\n    });\n  }\n\n  pageUrl() {\n    // get session cookies as parameters\n    let data = \"image_loader\";\n    let storage = sessionStorage.getItem(data);\n\n    if (storage === null) return;\n\n    let options: PageUrlType = JSON.parse(storage);\n\n    // get url params\n    let url = new URL(location.href);\n    let urlParam = new URLSearchParams(url.search);\n    var urlparam = options.urlparam ? options.urlparam : \"page\";\n    var current_check = urlParam.get(urlparam);\n    var _current = current_check ? current_check : \"1\";\n\n    // const item = document.querySelector('.pagination .nav-tabs .nav-item .nav-link.active');\n    // const href = item.getAttribute('href').replace('#', '');\n    if (_current == null) {\n      let default_pagination_check =\n        document.querySelector(\"edition-pagination\");\n      let default_pagination = default_pagination_check\n        ? default_pagination_check.getAttribute(\"pos\")\n        : \"1\";\n      urlParam.set(urlparam, default_pagination ? default_pagination : \"1\");\n      let url_value = urlParam.get(urlparam);\n      _current = url_value ? url_value : \"1\";\n    }\n\n    // set all nav links to inactive\n    let pag_link = options.pag_link ? options.pag_link : \".pagination-link\";\n    let active = options.active_class ? options.active_class : \"active\";\n    let inactive = options.inactive_class ? options.inactive_class : \"fade\";\n    let bootstrap_class = options.bootstrap_class\n      ? options.bootstrap_class\n      : \"show\";\n    let pag_tab = options.pag_tab\n      ? options.pag_tab\n      : \".pagination-tab.tab-pane\";\n\n    // deactivate all tabs\n    let tabs: NodeListOf<HTMLElement> = document.querySelectorAll(\n      `${pag_tab}[data-tab=\"paginate\"]`\n    );\n    [...tabs].forEach(function (el: HTMLElement) {\n      el.classList.remove(active);\n      el.classList.add(inactive);\n    });\n\n    // deactivate pagination linksshow metadata\n    let link: NodeListOf<HTMLElement> = document.querySelectorAll(\n      `${pag_link}`\n    );\n\n    let pgOpt: any = [];\n    [...link].forEach(function (el: HTMLElement) {\n      el.classList.remove(active);\n      el.classList.remove(bootstrap_class);\n      let el_id = el.getAttribute(\"id\");\n\n      if (el_id) {\n        let idn = el_id.split(\"_\");\n        let idNo = idn[idn.length - 1];\n        pgOpt.push(idNo);\n      }\n    });\n\n    // check if page url param is valid\n    if (!pgOpt.includes(_current)) {\n      let default_pagination_check =\n        document.querySelector(\"edition-pagination\");\n\n      let default_pagination = default_pagination_check\n        ? default_pagination_check.getAttribute(\"pos\")\n        : \"1\";\n\n      urlParam.set(urlparam, default_pagination ? default_pagination : \"1\");\n      console.log(`${urlparam}=${_current} is not a selectable option.`);\n      let url_value = urlParam.get(urlparam);\n      _current = url_value ? url_value : \"1\";\n    }\n\n    // activate tab base on urlparams\n    let tab = document.getElementById(`paginate-${_current}`) as HTMLElement;\n    tab.classList.remove(inactive);\n    tab.classList.add(active);\n    tab.classList.add(bootstrap_class);\n\n    // get all nav tabs matching href tabs based on urlparams and set to active\n    let linkActive: NodeListOf<HTMLElement> = document.querySelectorAll(\n      `${pag_link}[href=\"#paginate-${_current}\"]`\n    );\n\n    [...linkActive].forEach(function (el: HTMLElement) {\n      el.classList.add(active);\n      el.classList.add(bootstrap_class);\n    });\n\n    // create OSD container\n    // check if sizes object with font sizes is not null or undefined\n    let type_checked = options.img_types\n      ? options.img_types\n      : [\"type1\", \"type2\"];\n\n    // get class where osd img are inserted\n    let opt_osd_target = options.osd_target ? options.osd_target : \"container\";\n    let opt_img_source = options.img_source ? options.img_source : \"container2\";\n\n    // find correct image type\n    let i = 0;\n    let _image_type = \"\";\n    while (i < type_checked.length) {\n      if (\n        document.getElementById(\n          `${type_checked[i]}_${opt_osd_target}_${_current}`\n        )\n      ) {\n        _image_type = type_checked[i];\n      }\n      i++;\n    }\n\n    let _osd_container_id = `${_image_type}_${opt_osd_target}_${_current}`;\n    let _osd_container_id2 = `${_image_type}_${opt_img_source}_${_current}`;\n    let osd_container = document.getElementById(\n      _osd_container_id\n    ) as HTMLElement;\n    let osd_container_2 = document.getElementById(\n      _osd_container_id2\n    ) as HTMLElement;\n\n    /* ancestor wrapper of osd viewer */\n    let osd_container_2_img = document.getElementById(\n      `img-resize-${_current}`\n    ) as HTMLElement;\n\n    /* wrapper sibling of resize container to get correct height */\n    let test_container_height_check = document.getElementById(\n      `text-resize-${_current}`\n    );\n    let test_container_height = test_container_height_check\n      ? test_container_height_check.offsetHeight\n      : 0;\n\n    if (osd_container_2 && !osd_container_2_img.classList.contains(\"fade\")) {\n      osd_container.style.height = `${test_container_height}px`;\n      let image = document.getElementById(\n        `${_image_type}_img_${_current}`\n      ) as HTMLElement;\n\n      let image_src = image.getAttribute(\"data-src\");\n      let image_url = { type: \"image\", url: image_src };\n\n      let viewer = OpenSeadragon({\n        id: _osd_container_id,\n        prefixUrl:\n          \"https://cdnjs.cloudflare.com/ajax/libs/openseadragon/4.0.0/images/\",\n        tileSources: image_url,\n        // Initial rotation angle\n        // degrees: 90,\n        // Show rotation buttons\n        showRotationControl: true,\n        // Enable touch rotation on tactile devices\n        gestureSettingsTouch: {\n          pinchRotate: true,\n        },\n      });\n\n      // hides static images\n      osd_container_2.remove();\n\n      // hide loading spinner if image fully loaded status changes\n      // see issue: https://github.com/openseadragon/openseadragon/issues/1262\n      viewer.addHandler(\"open\", function () {\n        let tiledImage = viewer.world.getItemAt(0);\n        if (tiledImage.getFullyLoaded()) {\n          hideLoading(_osd_container_id);\n        } else {\n          tiledImage.addOnceHandler(\"fully-loaded-change\", function () {\n            let spinnerID2 = \"spinner_\" + _osd_container_id;\n            let tmp = document.getElementById(spinnerID2);\n            if (tmp) tmp.remove();\n          });\n        }\n      });\n    }\n\n    // get citation url class and update citation\n    let citation_url_str = options.chg_citation\n      ? options.chg_citation\n      : \"citation-url\";\n    let citation_url = document.getElementById(citation_url_str);\n\n    let href = `?${urlParam}${location.hash}`;\n    uptState({\n      hist: true,\n      cit: citation_url ? citation_url : false,\n      state: false,\n      href: href,\n    });\n  }\n\n  multiLanguage() {\n    // get session cookie with configartion json\n    const data = \"multi_language\";\n    const storage = sessionStorage.getItem(data);\n    if (storage === null) return;\n\n    const options: MultiLanguageType = JSON.parse(storage);\n\n    /* get current ur */\n    var url = new URL(document.location.href);\n\n    /* get current url parameters */\n    var urlParam = new URLSearchParams(url.search);\n\n    /* check if active class was defined or set to default class */\n    var active = options.active_class ? options.active_class : \"lang_active\";\n\n    /* create array of all configured user languages  */\n    var userLang: any[] = [];\n    for (let x of options.variants) {\n      userLang.push(x.opt);\n    }\n\n    /* ############################################### */\n    /*  verifying if urlparam set is valid */\n    /* ############################################### */\n    if (urlParam.get(\"lang\") == null) {\n      /* get current browser language */\n      var lang = navigator.language;\n      /* check if browser language is in configuration options */\n      var langUpdate = userLang.includes(lang.split(\"-\")[0])\n        ? lang.split(\"-\")[0]\n        : \"en\";\n      urlParam.set(\"lang\", langUpdate);\n    } else if (!userLang.includes(urlParam.get(\"lang\"))) {\n      /* check if urlparam set fits to configuration options */\n      urlParam.set(\"lang\", \"en\");\n      var langUpdate = \"en\";\n      console.log(`lang urlparameter does not fit webpage configuration.\n                    set to default language.`);\n    } else {\n      /* get urlparam set */\n      let url_value = urlParam.get(\"lang\");\n      var langUpdate = url_value ? url_value : \"en\";\n    }\n\n    // use try/catch to verify if object exists in options\n    var variants_check = options.variants.filter((v) => v.opt !== langUpdate);\n\n    // all variants except current clicked\n    var variants = variants_check\n      ? variants_check\n      : [\n          {\n            opt: langUpdate,\n          },\n        ];\n\n    // configuration holds an array with variants with at least one variant object.\n    // to match the custom element with the configuration the opt value must match.\n    // variant is found by comparing variant config opt with custom element attr opt\n    var variant_check = options.variants.find((v) => v.opt === langUpdate);\n\n    // variant as selected in UI\n    let variant = variant_check\n      ? variant_check\n      : {\n          opt: langUpdate,\n        };\n\n    if (!variant) {\n      console.log(\n        \"No variant found! Please define a variant object that contains \\\n                  and 'opt' key holding a string value that matches the 'opt' value of custom \\\n                  element 'annotation#slider'.\"\n      );\n    }\n\n    /* remove active class from variants not clicked */\n    [...variants].forEach((el) => {\n      let tmp = document.getElementById(`ml_${el.opt}`);\n      if (tmp) tmp.classList.remove(active);\n    });\n\n    /* set current clicked variant active with class and change state of urlparam */\n    let current = document.getElementById(`ml_${variant.opt}`) as HTMLElement;\n    current.classList.add(active);\n\n    /* check if language mappings is available */\n    var map = variant.map\n      ? variant.map\n      : {\n          \"index.html\": \"index-en.html\",\n        };\n\n    if (map) {\n      /* must be replaced in production\n          get pathname and specific filename\n          set new path based on mappings from mappings json\n          key in mappings = filename */\n      let path: string[] = location.pathname.split(\"/\");\n      let newPath =\n        path.length == 3 && path[2].length > 0\n          ? map[path[2]]\n          : path.length == 2 && path[1].length > 0\n          ? map[path[1]]\n          : map[\"index.html\"];\n\n      if (newPath) {\n        // current state of the annotation sliders is saved in the url parameters\n        // current state is also saved in window history (back/forward browser button)\n        var state = {\n          lang: variant.opt,\n        };\n\n        let href: string = `${newPath}?${urlParam}${location.hash}`;\n        uptState({\n          hist: true,\n          state: state,\n          href: href,\n        });\n      }\n    }\n  }\n}\n","import { uptState } from \"../../utils/utils\";\nimport type { MultiLanguageType } from \"../../utils/types\";\n\nexport class MultiLanguage extends HTMLElement {\n  static get observedAttributes() {\n    return [\"opt\"];\n  }\n\n  connectedCallback() {\n    this.render();\n    this.childNodes[1].addEventListener(\"click\", this.multiLanguage);\n    // console.log(this.childNodes[1]);\n  }\n\n  // function to triggers on click of the rendered element\n  multiLanguage() {\n    // get session cookie with configartion json\n    let data = \"multi_language\";\n    let storage = sessionStorage.getItem(data);\n    if (storage) {\n      let options: MultiLanguageType = JSON.parse(storage);\n\n      // get current url parameters\n      let url = new URL(window.location.href);\n      // let hash = url.hash;\n      let urlParam = new URLSearchParams(url.search);\n\n      // get id of rendered html element. opt value of custom element is used as ID.\n      let id = this.getAttribute(\"id\");\n      if (id) id.split(\"ml_\")[1];\n      if (!id)\n        console.log(\n          \"ID of multi language custom child element not found. \\\n              Make sure the annotation-slider element holds the attribute 'opt' with \\\n              a defined string value.\"\n        );\n\n      // configuration holds an array with variants with at least one variant object.\n      // to match the custom element with the configuration the opt value must match.\n      // variant is found by comparing variant config opt with custom element attr opt\n      var variant_check = options.variants.find((v) => v.opt === id);\n      // variant as selected in UI\n      let variant = variant_check ? variant_check : { opt: id ? id : \"en\" };\n      if (!variant)\n        console.log(\n          \"No variant found! Please define a variant object that contains \\\n              and 'opt' key holding a string value that matches the 'opt' value of custom \\\n              element 'annotation#slider'.\"\n        );\n\n      /* check if language mappings is available */\n      var map = variant.map ? variant.map : { \"index.html\": \"index-en.html\" };\n\n      /* save state in urlparam lang */\n      urlParam.set(\"lang\", variant.opt);\n\n      if (map) {\n        /* must be replaced in production\n        get pathname and specific filename\n        set new path based on mappings from mappings json\n        key in mappings = filename */\n        let path = location.pathname.split(\"/\");\n        let newPath =\n          path.length == 3 && path[2].length > 0\n            ? map[path[2]]\n            : path.length == 2 && path[1].length > 0\n            ? map[path[1]]\n            : map[\"index.html\"];\n\n        if (newPath) {\n          // current state of the annotation sliders is saved in the url parameters\n          // current state is also saved in window history (back/forward browser button)\n          var state = {\n            lang: variant.opt,\n          };\n\n          let href = `${newPath}?${urlParam}${location.hash}`;\n          uptState({\n            hist: true,\n            state: state,\n            href: href,\n          });\n\n          /* reload document after replaceState or url href */\n          location.reload();\n          return false;\n        }\n      }\n    }\n  }\n\n  // function to render HTML element inside the custom element\n  render() {\n    let data = \"multi_language\";\n    let storage = sessionStorage.getItem(data);\n    if (storage === null) return;\n    let options: MultiLanguageType = JSON.parse(storage);\n\n    let opt = this.getAttribute(\"opt\");\n    // check if user set opt attribute\n    if (typeof opt !== \"string\") {\n      console.log(\"No 'opt' attribute in custom element font-family found!\");\n    }\n\n    // variant is found by comparing variant config opt with custom element attr opt\n    var variant_check = options.variants.find((v) => v.opt === opt);\n    var variant = variant_check\n      ? variant_check\n      : {\n          opt: opt ? opt : \"en\",\n        };\n\n    let title = variant.title ? variant.title : \"English\";\n    let v_class = variant.class ? variant.class : \"nav-link pointer\";\n\n    this.innerHTML = `\n        <a id=\"ml_${variant.opt}\" class=\"${v_class}\">${title}</a>\n      `;\n  }\n\n  attributeChangedCallback() {\n    this.render();\n  }\n\n  disconnectedCallback() {\n    this.childNodes[1].removeEventListener(\"click\", this.multiLanguage);\n  }\n}\n","import { SetDataCookie } from \"./src/utils/setCookie\";\nimport type {\n  AnnotationType,\n  FontFamilyType,\n  FullScreenType,\n  FontSizeType,\n  ImageSwitchType,\n  MultiLanguageType,\n  PageUrlType,\n  ImageLoaderType,\n} from \"./src/utils/types\";\nimport { AnnotationSlider } from \"./src/components/annotation_slider/main\";\nimport { FullSize } from \"./src/components/full_screen/main\";\nimport { FontSize } from \"./src/components/font_size/main\";\nimport { FontFamily } from \"./src/components/font_family/main\";\nimport { ImageSwitch } from \"./src/components/image_switch/main\";\nimport { ImageLoader } from \"./src/components/image_loader/main\";\nimport { EditionPagination } from \"./src/components/image_loader/pagination\";\nimport { WindowResize } from \"./src/components/image_loader/resize\";\nimport { UrlSearchParamUpdate } from \"./src/components/search_params/main\";\nimport { MultiLanguage } from \"./src/components/multi_language/main\";\n\n(\"use strict\");\n\nexport class LoadEditor {\n  aot: AnnotationType | false;\n  fs: FullScreenType | false;\n  fos: FontSizeType | false;\n  ff: FontFamilyType | false;\n  is: ImageSwitchType | false;\n  il: ImageLoaderType | false;\n  ep: PageUrlType | false;\n  wr: boolean | false;\n  up: boolean | false;\n  upc: UrlSearchParamUpdate;\n  lang: MultiLanguageType | false;\n\n  constructor(options: {\n    aot?: AnnotationType;\n    fs?: FullScreenType;\n    fos?: FontSizeType;\n    ff?: FontFamilyType;\n    is?: ImageSwitchType;\n    il?: ImageLoaderType;\n    ep?: PageUrlType;\n    wr?: boolean;\n    up?: boolean;\n    lang?: MultiLanguageType;\n  }) {\n    /*\n        define configuration options\n        verify if option object is available and has specific key\n        if options are not available all key hold default values\n        if one or several keys are not available, only these keys will hold default values\n        */\n\n    this.aot = options.aot ? options.aot : false;\n    this.fs = options.fs ? options.fs : false;\n    this.fos = options.fos ? options.fos : false;\n    this.ff = options.ff ? options.ff : false;\n    this.is = options.is ? options.is : false;\n    this.il = options.il ? options.il : false;\n    this.ep = options.ep ? options.ep : false;\n    this.wr = options.wr ? options.wr : false;\n    this.up = options.up ? options.up : false;\n    this.upc = new UrlSearchParamUpdate();\n    this.lang = options.lang ? options.lang : false;\n\n    // set cookies if config options is available\n    if (this.aot) {\n      [...this.aot.variants].forEach((variant) => {\n        if (variant.custom_function instanceof Function) {\n          variant.custom_function = variant.custom_function.toString();\n        }\n      });\n      try {\n        new SetDataCookie(\"annotation_slider\", this.aot).build();\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    if (this.fs) {\n      try {\n        new SetDataCookie(\"fullsize\", this.fs).build();\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    if (this.fos) {\n      try {\n        new SetDataCookie(\"fontsize\", this.fos).build();\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    if (this.ff) {\n      try {\n        new SetDataCookie(\"font_family\", this.ff).build();\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    if (this.il) {\n      try {\n        new SetDataCookie(\"image_loader\", this.il).build();\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    if (this.is) {\n      try {\n        new SetDataCookie(\"image_switch\", this.is).build();\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    if (this.ep) {\n      try {\n        new SetDataCookie(\"ed_pagination\", this.ep).build();\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    if (this.lang) {\n      try {\n        new SetDataCookie(\"multi_language\", this.lang).build();\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    // defines custom elements and assigns a class\n    // renders html node and adds function\n    // window onload triggers paramUrl functions\n    if (this.ep) {\n      try {\n        window.customElements.define(\"edition-pagination\", EditionPagination);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    if (this.aot) {\n      try {\n        window.customElements.define(\"annotation-slider\", AnnotationSlider);\n        if (this.up) {\n          window.onload = this.upc.textFeatures;\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    if (this.fs) {\n      try {\n        window.customElements.define(\"full-size\", FullSize);\n        if (this.up) {\n          window.onload = this.upc.fullScreen;\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    if (this.fos) {\n      try {\n        window.customElements.define(\"font-size\", FontSize);\n        if (this.up) {\n          window.onload = this.upc.fontSize;\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    if (this.ff) {\n      try {\n        window.customElements.define(\"font-family\", FontFamily);\n        if (this.up) {\n          window.onload = this.upc.fontFamily;\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    if (this.wr) {\n      try {\n        window.customElements.define(\"window-resize\", WindowResize);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    if (this.is) {\n      try {\n        window.customElements.define(\"image-switch\", ImageSwitch);\n        if (this.up) {\n          window.onload = this.upc.viewerSwitch;\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    if (this.il) {\n      try {\n        window.customElements.define(\"image-loader\", ImageLoader);\n        if (this.up) {\n          window.onload = this.upc.pageUrl;\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    if (this.lang) {\n      try {\n        window.customElements.define(\"multi-language\", MultiLanguage);\n        if (this.up) {\n          window.onload = this.upc.multiLanguage;\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    // onpopstate = browser back and forward button to recognize classes\n    window.onpopstate = () => {\n      if (this.aot && this.up) {\n        try {\n          this.upc.textFeatures();\n        } catch (e) {\n          console.log(e);\n        }\n      }\n      if (this.fs && this.up) {\n        try {\n          this.upc.fullScreen();\n        } catch (e) {\n          console.log(e);\n        }\n      }\n      if (this.fos && this.up) {\n        try {\n          this.upc.fontSize();\n        } catch (e) {\n          console.log(e);\n        }\n      }\n      if (this.ff && this.up) {\n        try {\n          this.upc.fontFamily();\n        } catch (e) {\n          console.log(e);\n        }\n      }\n      if (this.is && this.up) {\n        try {\n          this.upc.viewerSwitch();\n        } catch (e) {\n          console.log(e);\n        }\n      }\n      if (this.il && this.up) {\n        try {\n          this.upc.pageUrl();\n        } catch (e) {\n          console.log(e);\n        }\n      }\n      if (this.lang && this.up) {\n        try {\n          this.upc.multiLanguage();\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    };\n\n    window.onload = () => {\n      if (window.location.hash == \"\") {\n        return false;\n      } else {\n        var el: any = document.querySelector(window.location.hash);\n\n        if (el !== null) {\n          el.scrollIntoView({ behavior: \"smooth\" });\n          el.style.backgroundColor = \"#FFFCA1\";\n\n          setTimeout(function () {\n            el.style.backgroundColor = \"transparent\";\n          }, 10000);\n        }\n      }\n    };\n  }\n}\n"]}